{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\S07P31C209\\\\frontend\\\\src\\\\screens\\\\VR.tsx\",\n  _s = $RefreshSig$();\nimport './VR.scss';\nimport Iframe from 'react-iframe';\nimport { useNavigate, useLocation } from 'react-router';\nimport { useEffect, useState } from 'react';\nimport MoveToBack from '@/components/common/MoveToBack';\nimport { useRecoilState } from 'recoil';\nimport { loadingState } from '../apis/Recoil';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VR() {\n  _s();\n  // recoil\n  const [isLoading, setIsLoading] = useRecoilState(loadingState);\n  setIsLoading(true);\n\n  // 받은 위치 정보로 서버에 데이터 요청\n  const {\n    state\n  } = useLocation();\n  let location = {};\n\n  // 받은 위치 정보가 없을 경우, 현재 위치 탐색\n  if (state === null) {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(pos => {\n        location = {\n          lat: pos.coords.latitude,\n          lng: pos.coords.longitude\n        };\n      });\n    }\n  } else {\n    location = state.position;\n  }\n\n  // 자식에 데이터 전달\n  useEffect(() => {\n    var _child$0$contentWindo;\n    const child = document.getElementsByTagName('iframe');\n    (_child$0$contentWindo = child[0].contentWindow) === null || _child$0$contentWindo === void 0 ? void 0 : _child$0$contentWindo.postMessage(location, '*');\n  });\n\n  // 자식에게서 메세지 받을 경우 페이지 이동\n  const navigate = useNavigate();\n  const [postId, setPostId] = useState(0);\n  const receiveMsgFromChild = ev => {\n    if (ev.data === 'denied') {\n      navigate(-1);\n    } else if (ev.data === 'create') {\n      navigate('/message/create');\n    } else if (typeof ev.data === 'number') {\n      setPostId(ev.data);\n      navigate(`/message/detail/${ev.data}`);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('message', receiveMsgFromChild);\n    return () => window.removeEventListener('message', receiveMsgFromChild);\n  }, [postId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vr\",\n    children: [/*#__PURE__*/_jsxDEV(MoveToBack, {\n      path: \"-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Iframe, {\n      className: \"vr-frame\",\n      url: \"../iframeVR/IframeVR.html\",\n      frameBorder: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(VR, \"2LKmjVdQUPCM4VaxzfylT7JR8+0=\", false, function () {\n  return [useRecoilState, useLocation, useNavigate];\n});\n_c = VR;\nexport default VR;\nvar _c;\n$RefreshReg$(_c, \"VR\");","map":{"version":3,"names":["Iframe","useNavigate","useLocation","useEffect","useState","MoveToBack","useRecoilState","loadingState","VR","isLoading","setIsLoading","state","location","navigator","geolocation","getCurrentPosition","pos","lat","coords","latitude","lng","longitude","position","child","document","getElementsByTagName","contentWindow","postMessage","navigate","postId","setPostId","receiveMsgFromChild","ev","data","window","addEventListener","removeEventListener"],"sources":["C:/Users/Administrator/Desktop/S07P31C209/frontend/src/screens/VR.tsx"],"sourcesContent":["import './VR.scss';\r\nimport Iframe from 'react-iframe';\r\nimport {useNavigate, useLocation} from 'react-router';\r\nimport {useEffect, useState} from 'react';\r\nimport MoveToBack from '@/components/common/MoveToBack';\r\nimport {useRecoilState} from 'recoil';\r\nimport {loadingState} from '../apis/Recoil';\r\n\r\ntype RouteState = {\r\n  state: {\r\n    position: {\r\n      lat: number;\r\n      lng: number;\r\n    };\r\n  };\r\n};\r\n\r\nfunction VR() {\r\n  // recoil\r\n  const [isLoading, setIsLoading] = useRecoilState(loadingState);\r\n  setIsLoading(true);\r\n\r\n  // 받은 위치 정보로 서버에 데이터 요청\r\n  const {state} = useLocation() as RouteState;\r\n\r\n  let location = {};\r\n\r\n  // 받은 위치 정보가 없을 경우, 현재 위치 탐색\r\n  if (state === null) {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(pos => {\r\n        location = {\r\n          lat: pos.coords.latitude,\r\n          lng: pos.coords.longitude,\r\n        };\r\n      });\r\n    }\r\n  } else {\r\n    location = state.position;\r\n  }\r\n\r\n  // 자식에 데이터 전달\r\n  useEffect(() => {\r\n    const child = document.getElementsByTagName('iframe');\r\n    child[0].contentWindow?.postMessage(location, '*');\r\n  });\r\n\r\n  // 자식에게서 메세지 받을 경우 페이지 이동\r\n  const navigate = useNavigate();\r\n  const [postId, setPostId] = useState(0);\r\n\r\n  const receiveMsgFromChild = (ev: MessageEvent<any>) => {\r\n    if (ev.data === 'denied') {\r\n      navigate(-1);\r\n    } else if (ev.data === 'create') {\r\n      navigate('/message/create');\r\n    } else if (typeof ev.data === 'number') {\r\n      setPostId(ev.data);\r\n      navigate(`/message/detail/${ev.data}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('message', receiveMsgFromChild);\r\n    return () => window.removeEventListener('message', receiveMsgFromChild);\r\n  }, [postId]);\r\n\r\n  return (\r\n    <div className=\"vr\">\r\n      <MoveToBack path=\"-1\" />\r\n\r\n      <Iframe\r\n        className=\"vr-frame\"\r\n        url=\"../iframeVR/IframeVR.html\"\r\n        frameBorder={0}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VR;\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,cAAc;AACjC,SAAQC,WAAW,EAAEC,WAAW,QAAO,cAAc;AACrD,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAOC,UAAU,MAAM,gCAAgC;AACvD,SAAQC,cAAc,QAAO,QAAQ;AACrC,SAAQC,YAAY,QAAO,gBAAgB;AAAC;AAW5C,SAASC,EAAE,GAAG;EAAA;EACZ;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGJ,cAAc,CAACC,YAAY,CAAC;EAC9DG,YAAY,CAAC,IAAI,CAAC;;EAElB;EACA,MAAM;IAACC;EAAK,CAAC,GAAGT,WAAW,EAAgB;EAE3C,IAAIU,QAAQ,GAAG,CAAC,CAAC;;EAEjB;EACA,IAAID,KAAK,KAAK,IAAI,EAAE;IAClB,IAAIE,SAAS,CAACC,WAAW,EAAE;MACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAACC,GAAG,IAAI;QAC9CJ,QAAQ,GAAG;UACTK,GAAG,EAAED,GAAG,CAACE,MAAM,CAACC,QAAQ;UACxBC,GAAG,EAAEJ,GAAG,CAACE,MAAM,CAACG;QAClB,CAAC;MACH,CAAC,CAAC;IACJ;EACF,CAAC,MAAM;IACLT,QAAQ,GAAGD,KAAK,CAACW,QAAQ;EAC3B;;EAEA;EACAnB,SAAS,CAAC,MAAM;IAAA;IACd,MAAMoB,KAAK,GAAGC,QAAQ,CAACC,oBAAoB,CAAC,QAAQ,CAAC;IACrD,yBAAAF,KAAK,CAAC,CAAC,CAAC,CAACG,aAAa,0DAAtB,sBAAwBC,WAAW,CAACf,QAAQ,EAAE,GAAG,CAAC;EACpD,CAAC,CAAC;;EAEF;EACA,MAAMgB,QAAQ,GAAG3B,WAAW,EAAE;EAC9B,MAAM,CAAC4B,MAAM,EAAEC,SAAS,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC;EAEvC,MAAM2B,mBAAmB,GAAIC,EAAqB,IAAK;IACrD,IAAIA,EAAE,CAACC,IAAI,KAAK,QAAQ,EAAE;MACxBL,QAAQ,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,MAAM,IAAII,EAAE,CAACC,IAAI,KAAK,QAAQ,EAAE;MAC/BL,QAAQ,CAAC,iBAAiB,CAAC;IAC7B,CAAC,MAAM,IAAI,OAAOI,EAAE,CAACC,IAAI,KAAK,QAAQ,EAAE;MACtCH,SAAS,CAACE,EAAE,CAACC,IAAI,CAAC;MAClBL,QAAQ,CAAE,mBAAkBI,EAAE,CAACC,IAAK,EAAC,CAAC;IACxC;EACF,CAAC;EAED9B,SAAS,CAAC,MAAM;IACd+B,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEJ,mBAAmB,CAAC;IACvD,OAAO,MAAMG,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEL,mBAAmB,CAAC;EACzE,CAAC,EAAE,CAACF,MAAM,CAAC,CAAC;EAEZ,oBACE;IAAK,SAAS,EAAC,IAAI;IAAA,wBACjB,QAAC,UAAU;MAAC,IAAI,EAAC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAG,eAExB,QAAC,MAAM;MACL,SAAS,EAAC,UAAU;MACpB,GAAG,EAAC,2BAA2B;MAC/B,WAAW,EAAE;IAAE;MAAA;MAAA;MAAA;IAAA,QACf;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,GA7DQrB,EAAE;EAAA,QAEyBF,cAAc,EAIhCJ,WAAW,EAyBVD,WAAW;AAAA;AAAA,KA/BrBO,EAAE;AA+DX,eAAeA,EAAE;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}