{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getMessaging, getToken, onMessage } from 'firebase/messaging';\nimport firebaseConfig from '@apis/notifications/firebase-config';\nconst app = initializeApp(firebaseConfig);\nconst messaging = getMessaging();\n\n//토큰값 얻기\ngetToken(messaging, {\n  vapidKey: 'BJpQpJ85bWRoJnhpznnEN2lHtCHgQ7t36mUmHJTvwOk4gp8ua6K_-YQBk6_R65xJEWsedMFfcCddOTqBtQWJF1U'\n}).then(currentToken => {\n  if (currentToken) {\n    // Send the token to your server and update the UI if necessary\n    // ...\n    console.log(currentToken);\n  } else {\n    // Show permission request UI\n    console.log('No registration token available. Request permission to generate one.');\n    // ...\n  }\n}).catch(err => {\n  console.log('An error occurred while retrieving token. ', err);\n  // ...\n});\n\n//포그라운드 메시지 수신 (콘솔 출력)\nonMessage(messaging, payload => {\n  console.log('Message received. ', payload);\n  // ...\n});","map":{"version":3,"names":["initializeApp","getMessaging","getToken","onMessage","firebaseConfig","app","messaging","vapidKey","then","currentToken","console","log","catch","err","payload"],"sources":["C:/Users/Administrator/Desktop/S07P31C209/frontend/src/apis/notifications/fcm.ts"],"sourcesContent":["import {initializeApp} from 'firebase/app';\r\nimport {getMessaging, getToken, onMessage} from 'firebase/messaging';\r\nimport firebaseConfig from '@apis/notifications/firebase-config';\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst messaging = getMessaging();\r\n\r\n//토큰값 얻기\r\ngetToken(messaging, {\r\n  vapidKey:\r\n    'BJpQpJ85bWRoJnhpznnEN2lHtCHgQ7t36mUmHJTvwOk4gp8ua6K_-YQBk6_R65xJEWsedMFfcCddOTqBtQWJF1U',\r\n})\r\n  .then(currentToken => {\r\n    if (currentToken) {\r\n      // Send the token to your server and update the UI if necessary\r\n      // ...\r\n      console.log(currentToken);\r\n    } else {\r\n      // Show permission request UI\r\n      console.log(\r\n        'No registration token available. Request permission to generate one.',\r\n      );\r\n      // ...\r\n    }\r\n  })\r\n  .catch(err => {\r\n    console.log('An error occurred while retrieving token. ', err);\r\n    // ...\r\n  });\r\n\r\n//포그라운드 메시지 수신 (콘솔 출력)\r\nonMessage(messaging, payload => {\r\n  console.log('Message received. ', payload);\r\n  // ...\r\n});\r\n"],"mappings":"AAAA,SAAQA,aAAa,QAAO,cAAc;AAC1C,SAAQC,YAAY,EAAEC,QAAQ,EAAEC,SAAS,QAAO,oBAAoB;AACpE,OAAOC,cAAc,MAAM,qCAAqC;AAEhE,MAAMC,GAAG,GAAGL,aAAa,CAACI,cAAc,CAAC;AACzC,MAAME,SAAS,GAAGL,YAAY,EAAE;;AAEhC;AACAC,QAAQ,CAACI,SAAS,EAAE;EAClBC,QAAQ,EACN;AACJ,CAAC,CAAC,CACCC,IAAI,CAACC,YAAY,IAAI;EACpB,IAAIA,YAAY,EAAE;IAChB;IACA;IACAC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;EAC3B,CAAC,MAAM;IACL;IACAC,OAAO,CAACC,GAAG,CACT,sEAAsE,CACvE;IACD;EACF;AACF,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;EACZH,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEE,GAAG,CAAC;EAC9D;AACF,CAAC,CAAC;;AAEJ;AACAV,SAAS,CAACG,SAAS,EAAEQ,OAAO,IAAI;EAC9BJ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEG,OAAO,CAAC;EAC1C;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}