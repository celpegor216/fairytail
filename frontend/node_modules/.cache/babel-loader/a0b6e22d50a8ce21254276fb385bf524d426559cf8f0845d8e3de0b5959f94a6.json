{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\S07P31C209\\\\frontend\\\\src\\\\screens\\\\Notifications.tsx\",\n  _s = $RefreshSig$();\n// ** 알림\nimport { useEffect, useState } from 'react';\nimport { collection, query, where, getDocs, deleteDoc, doc } from 'firebase/firestore';\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\nimport '@screens/Notifications.scss';\nimport MyNotification from '@individual/MyNotification';\nimport MoveToBack from '@common/MoveToBack';\nimport { db } from '@apis/notifications/firebaseConfig';\nimport { currentUser } from '@common/commonFunc';\nimport bell from '@images/bell.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Notifications() {\n  _s();\n  const [newItems, setNewItems] = useState([]);\n  const deleteEach = index => {\n    signInWithEmailAndPassword(auth, process.env.REACT_APP_ADMIN_EMAIL || '', process.env.REACT_APP_ADMIN_PASSWORD || '') //정보를 토대로 로그인\n    .then(async () => {\n      try {\n        deleteDoc(doc(db, 'notification', String(newItems[index].id)));\n        setNewItems(() => newItems.filter((element, i) => i !== index));\n      } catch (e) {\n        console.error('Error adding document: ', e);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const deleteAll = async () => {\n    signInWithEmailAndPassword(auth, process.env.REACT_APP_ADMIN_EMAIL || '', process.env.REACT_APP_ADMIN_PASSWORD || '') //정보를 토대로 로그인\n    .then(async () => {\n      try {\n        const deletedItems = [...newItems];\n        setNewItems(() => []);\n        deletedItems.forEach(element => {\n          deleteDoc(doc(db, 'notification', String(element.id)));\n        });\n      } catch (e) {\n        console.error('Error adding document: ', e);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const userId = currentUser();\n  const auth = getAuth();\n  const readData = async userId => {\n    console.log(process.env.REACT_APP_ADMIN_EMAIL);\n    console.log(process.env.REACT_APP_ADMIN_PASSWORD);\n    signInWithEmailAndPassword(auth, process.env.REACT_APP_ADMIN_EMAIL || '', process.env.REACT_APP_ADMIN_PASSWORD || '') //정보를 토대로 로그인\n    .then(async () => {\n      try {\n        const q = query(collection(db, 'notification'), where('userId', '==', userId));\n        const querySnapshot = await getDocs(q);\n        const newData = [];\n        querySnapshot.forEach(doc => {\n          newData.push({\n            id: String(doc.id),\n            ...doc.data()\n          });\n        });\n        setNewItems(() => newData);\n      } catch (e) {\n        console.error('Error adding document: ', e);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  useEffect(() => {\n    readData(userId);\n  }, []);\n  const temp = [{\n    id: '123',\n    userId: 0,\n    postId: 0,\n    title: '제목',\n    emojiNo: 0,\n    type: 0\n  }, {\n    id: '123',\n    userId: 0,\n    postId: 0,\n    title: '제목',\n    emojiNo: 0,\n    type: 0\n  }, {\n    id: '123',\n    userId: 0,\n    postId: 0,\n    title: '제목',\n    emojiNo: 0,\n    type: 0\n  }, {\n    id: '123',\n    userId: 0,\n    postId: 0,\n    title: '제목',\n    emojiNo: 0,\n    type: 0\n  }, {\n    id: '123',\n    userId: 0,\n    postId: 0,\n    title: '제목',\n    emojiNo: 0,\n    type: 0\n  }, {\n    id: '123',\n    userId: 0,\n    postId: 0,\n    title: '제목',\n    emojiNo: 0,\n    type: 0\n  }, {\n    id: '123',\n    userId: 0,\n    postId: 0,\n    title: '제목',\n    emojiNo: 0,\n    type: 0\n  }, {\n    id: '123',\n    userId: 0,\n    postId: 0,\n    title: '제목',\n    emojiNo: 0,\n    type: 0\n  }, {\n    id: '123',\n    userId: 0,\n    postId: 0,\n    title: '제목',\n    emojiNo: 0,\n    type: 0\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: [/*#__PURE__*/_jsxDEV(MoveToBack, {\n      path: \"-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container settings-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-header\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: bell,\n          className: \"settings-header-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifications\",\n        children: [temp.length > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"notifications-delete-all\",\n          onClick: deleteAll,\n          draggable: true,\n          children: \"\\uC804\\uCCB4 \\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this) : null, temp.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notifications-empty\",\n          children: \"\\uC0C8\\uB85C\\uC6B4 \\uC54C\\uB9BC\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notifications-list\",\n          children: temp.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(MyNotification, {\n              item: item,\n              deleteEach: deleteEach,\n              index: index,\n              dragFlag: true\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n}\n_s(Notifications, \"wvaBWEI0sqGvfsBdopqtAjbD+bk=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["useEffect","useState","collection","query","where","getDocs","deleteDoc","doc","getAuth","signInWithEmailAndPassword","MyNotification","MoveToBack","db","currentUser","bell","Notifications","newItems","setNewItems","deleteEach","index","auth","process","env","REACT_APP_ADMIN_EMAIL","REACT_APP_ADMIN_PASSWORD","then","String","id","filter","element","i","e","console","error","catch","log","deleteAll","deletedItems","forEach","userId","readData","q","querySnapshot","newData","push","data","temp","postId","title","emojiNo","type","length","map","item"],"sources":["C:/Users/Administrator/Desktop/S07P31C209/frontend/src/screens/Notifications.tsx"],"sourcesContent":["// ** 알림\r\nimport {useEffect, useState} from 'react';\r\nimport {\r\n  collection,\r\n  query,\r\n  where,\r\n  getDocs,\r\n  deleteDoc,\r\n  doc,\r\n} from 'firebase/firestore';\r\nimport {getAuth, signInWithEmailAndPassword} from 'firebase/auth';\r\n\r\nimport '@screens/Notifications.scss';\r\nimport MyNotification from '@individual/MyNotification';\r\nimport {item} from '@individual/notification';\r\nimport MoveToBack from '@common/MoveToBack';\r\nimport {db} from '@apis/notifications/firebaseConfig';\r\nimport {currentUser} from '@common/commonFunc';\r\n\r\nimport bell from '@images/bell.png';\r\n\r\nfunction Notifications() {\r\n  const [newItems, setNewItems] = useState<item[]>([]);\r\n  const deleteEach = (index: number) => {\r\n    signInWithEmailAndPassword(\r\n      auth,\r\n      process.env.REACT_APP_ADMIN_EMAIL || '',\r\n      process.env.REACT_APP_ADMIN_PASSWORD || '',\r\n    ) //정보를 토대로 로그인\r\n      .then(async () => {\r\n        try {\r\n          deleteDoc(doc(db, 'notification', String(newItems[index].id)));\r\n          setNewItems(() => newItems.filter((element, i) => i !== index));\r\n        } catch (e) {\r\n          console.error('Error adding document: ', e);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const deleteAll = async () => {\r\n    signInWithEmailAndPassword(\r\n      auth,\r\n      process.env.REACT_APP_ADMIN_EMAIL || '',\r\n      process.env.REACT_APP_ADMIN_PASSWORD || '',\r\n    ) //정보를 토대로 로그인\r\n      .then(async () => {\r\n        try {\r\n          const deletedItems = [...newItems];\r\n          setNewItems(() => []);\r\n          deletedItems.forEach(element => {\r\n            deleteDoc(doc(db, 'notification', String(element.id)));\r\n          });\r\n        } catch (e) {\r\n          console.error('Error adding document: ', e);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const userId = currentUser();\r\n\r\n  const auth = getAuth();\r\n  const readData = async (userId: number) => {\r\n    console.log(process.env.REACT_APP_ADMIN_EMAIL);\r\n    console.log(process.env.REACT_APP_ADMIN_PASSWORD);\r\n    signInWithEmailAndPassword(\r\n      auth,\r\n      process.env.REACT_APP_ADMIN_EMAIL || '',\r\n      process.env.REACT_APP_ADMIN_PASSWORD || '',\r\n    ) //정보를 토대로 로그인\r\n      .then(async () => {\r\n        try {\r\n          const q = query(\r\n            collection(db, 'notification'),\r\n            where('userId', '==', userId),\r\n          );\r\n          const querySnapshot = await getDocs(q);\r\n          const newData: any = [];\r\n          querySnapshot.forEach(doc => {\r\n            newData.push({id: String(doc.id), ...doc.data()});\r\n          });\r\n          setNewItems(() => newData);\r\n        } catch (e) {\r\n          console.error('Error adding document: ', e);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    readData(userId);\r\n  }, []);\r\n\r\n  const temp = [\r\n    {\r\n      id: '123',\r\n      userId: 0,\r\n      postId: 0,\r\n      title: '제목',\r\n      emojiNo: 0,\r\n      type: 0,\r\n    },\r\n    {\r\n      id: '123',\r\n      userId: 0,\r\n      postId: 0,\r\n      title: '제목',\r\n      emojiNo: 0,\r\n      type: 0,\r\n    },\r\n    {\r\n      id: '123',\r\n      userId: 0,\r\n      postId: 0,\r\n      title: '제목',\r\n      emojiNo: 0,\r\n      type: 0,\r\n    },\r\n    {\r\n      id: '123',\r\n      userId: 0,\r\n      postId: 0,\r\n      title: '제목',\r\n      emojiNo: 0,\r\n      type: 0,\r\n    },\r\n    {\r\n      id: '123',\r\n      userId: 0,\r\n      postId: 0,\r\n      title: '제목',\r\n      emojiNo: 0,\r\n      type: 0,\r\n    },\r\n    {\r\n      id: '123',\r\n      userId: 0,\r\n      postId: 0,\r\n      title: '제목',\r\n      emojiNo: 0,\r\n      type: 0,\r\n    },\r\n    {\r\n      id: '123',\r\n      userId: 0,\r\n      postId: 0,\r\n      title: '제목',\r\n      emojiNo: 0,\r\n      type: 0,\r\n    },\r\n    {\r\n      id: '123',\r\n      userId: 0,\r\n      postId: 0,\r\n      title: '제목',\r\n      emojiNo: 0,\r\n      type: 0,\r\n    },\r\n    {\r\n      id: '123',\r\n      userId: 0,\r\n      postId: 0,\r\n      title: '제목',\r\n      emojiNo: 0,\r\n      type: 0,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"screen\">\r\n      <MoveToBack path=\"-1\" />\r\n      <div className=\"container settings-container\">\r\n        <div className=\"settings-header\">\r\n          <img src={bell} className=\"settings-header-icon\" />\r\n        </div>\r\n\r\n        <div className=\"notifications\">\r\n          {temp.length > 0 ? (\r\n            <p\r\n              className=\"notifications-delete-all\"\r\n              onClick={deleteAll}\r\n              draggable>\r\n              전체 삭제\r\n            </p>\r\n          ) : null}\r\n\r\n          {temp.length === 0 ? (\r\n            <div className=\"notifications-empty\">새로운 알림이 없습니다.</div>\r\n          ) : (\r\n            <div className=\"notifications-list\">\r\n              {temp.map((item, index) => {\r\n                return (\r\n                  <MyNotification\r\n                    item={item}\r\n                    key={item.id}\r\n                    deleteEach={deleteEach}\r\n                    index={index}\r\n                    dragFlag={true}\r\n                  />\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}