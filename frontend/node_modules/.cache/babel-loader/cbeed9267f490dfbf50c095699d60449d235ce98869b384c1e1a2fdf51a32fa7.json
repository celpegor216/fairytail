{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\S07P31C209\\\\frontend\\\\src\\\\components\\\\messageCreate\\\\Carousel.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport 'swiper/css';\nimport './Carousel.scss';\nimport 'swiper/css/effect-coverflow';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { EffectCoverflow } from 'swiper';\nimport { emojiArr } from '../../assets/emojis';\nimport useLongPress from '@/apis/useLongPress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Carousel(_ref) {\n  _s();\n  let {\n    onSlideChange,\n    setIsLongClicked,\n    emojiNo\n  } = _ref;\n  const [swiper, setSwiper] = useState();\n  const longPress = useLongPress(() => setIsLongClicked(true), 500);\n  useEffect(() => {\n    swiper && swiper.slideTo(emojiNo, 1000);\n  }, [emojiNo]);\n  return /*#__PURE__*/_jsxDEV(Swiper, {\n    onSwiper: setSwiper,\n    touchStartPreventDefault: false,\n    initialSlide: Math.floor(Math.random() * 76),\n    slideToClickedSlide: true,\n    effect: 'coverflow',\n    slidesPerView: 2,\n    centeredSlides: true,\n    coverflowEffect: {\n      rotate: 0,\n      stretch: 0,\n      depth: 500,\n      modifier: 1,\n      slideShadows: false\n    },\n    modules: [EffectCoverflow],\n    onSlideChange: swiper => onSlideChange(swiper.realIndex),\n    children: emojiArr.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        ...longPress,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"emoji\",\n          src: item,\n          alt: `${index}번 이모지`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Carousel, \"5BcAKp/+93fY/1SYFE04+plKci4=\", false, function () {\n  return [useLongPress];\n});\n_c = Carousel;\nexport default Carousel;\nvar _c;\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"names":["useState","useEffect","Swiper","SwiperSlide","EffectCoverflow","emojiArr","useLongPress","Carousel","onSlideChange","setIsLongClicked","emojiNo","swiper","setSwiper","longPress","slideTo","Math","floor","random","rotate","stretch","depth","modifier","slideShadows","realIndex","map","item","index"],"sources":["C:/Users/Administrator/Desktop/S07P31C209/frontend/src/components/messageCreate/Carousel.tsx"],"sourcesContent":["import {useState, Dispatch, SetStateAction, useEffect} from 'react';\r\nimport 'swiper/css';\r\nimport './Carousel.scss';\r\nimport 'swiper/css/effect-coverflow';\r\nimport {Swiper, SwiperSlide} from 'swiper/react';\r\nimport SwiperCore, {EffectCoverflow} from 'swiper';\r\nimport {emojiArr} from '../../assets/emojis';\r\nimport useLongPress from '@/apis/useLongPress';\r\n\r\ntype CarouselProps = {\r\n  emojiNo: number;\r\n  onSlideChange: Dispatch<SetStateAction<number>>;\r\n  setIsLongClicked: Dispatch<SetStateAction<boolean>>;\r\n};\r\n\r\nfunction Carousel({onSlideChange, setIsLongClicked, emojiNo}: CarouselProps) {\r\n  const [swiper, setSwiper] = useState<SwiperCore>();\r\n\r\n  const longPress = useLongPress(() => setIsLongClicked(true), 500);\r\n\r\n  useEffect(() => {\r\n    swiper && swiper.slideTo(emojiNo, 1000);\r\n  }, [emojiNo]);\r\n\r\n  return (\r\n    <Swiper\r\n      onSwiper={setSwiper}\r\n      touchStartPreventDefault={false}\r\n      initialSlide={Math.floor(Math.random() * 76)}\r\n      slideToClickedSlide={true}\r\n      effect={'coverflow'}\r\n      slidesPerView={2}\r\n      centeredSlides={true}\r\n      coverflowEffect={{\r\n        rotate: 0,\r\n        stretch: 0,\r\n        depth: 500,\r\n        modifier: 1,\r\n        slideShadows: false,\r\n      }}\r\n      modules={[EffectCoverflow]}\r\n      onSlideChange={swiper => onSlideChange(swiper.realIndex)}>\r\n      {emojiArr.map((item, index) => {\r\n        return (\r\n          <SwiperSlide key={index} {...longPress}>\r\n            <img className=\"emoji\" src={item} alt={`${index}번 이모지`} />\r\n          </SwiperSlide>\r\n        );\r\n      })}\r\n    </Swiper>\r\n  );\r\n}\r\n\r\nexport default Carousel;\r\n"],"mappings":";;AAAA,SAAQA,QAAQ,EAA4BC,SAAS,QAAO,OAAO;AACnE,OAAO,YAAY;AACnB,OAAO,iBAAiB;AACxB,OAAO,6BAA6B;AACpC,SAAQC,MAAM,EAAEC,WAAW,QAAO,cAAc;AAChD,SAAoBC,eAAe,QAAO,QAAQ;AAClD,SAAQC,QAAQ,QAAO,qBAAqB;AAC5C,OAAOC,YAAY,MAAM,qBAAqB;AAAC;AAQ/C,SAASC,QAAQ,OAA4D;EAAA;EAAA,IAA3D;IAACC,aAAa;IAAEC,gBAAgB;IAAEC;EAAsB,CAAC;EACzE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,EAAc;EAElD,MAAMa,SAAS,GAAGP,YAAY,CAAC,MAAMG,gBAAgB,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC;EAEjER,SAAS,CAAC,MAAM;IACdU,MAAM,IAAIA,MAAM,CAACG,OAAO,CAACJ,OAAO,EAAE,IAAI,CAAC;EACzC,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,oBACE,QAAC,MAAM;IACL,QAAQ,EAAEE,SAAU;IACpB,wBAAwB,EAAE,KAAM;IAChC,YAAY,EAAEG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,EAAE,CAAE;IAC7C,mBAAmB,EAAE,IAAK;IAC1B,MAAM,EAAE,WAAY;IACpB,aAAa,EAAE,CAAE;IACjB,cAAc,EAAE,IAAK;IACrB,eAAe,EAAE;MACfC,MAAM,EAAE,CAAC;MACTC,OAAO,EAAE,CAAC;MACVC,KAAK,EAAE,GAAG;MACVC,QAAQ,EAAE,CAAC;MACXC,YAAY,EAAE;IAChB,CAAE;IACF,OAAO,EAAE,CAAClB,eAAe,CAAE;IAC3B,aAAa,EAAEO,MAAM,IAAIH,aAAa,CAACG,MAAM,CAACY,SAAS,CAAE;IAAA,UACxDlB,QAAQ,CAACmB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC7B,oBACE,QAAC,WAAW;QAAA,GAAiBb,SAAS;QAAA,uBACpC;UAAK,SAAS,EAAC,OAAO;UAAC,GAAG,EAAEY,IAAK;UAAC,GAAG,EAAG,GAAEC,KAAM;QAAO;UAAA;UAAA;UAAA;QAAA;MAAG,GAD1CA,KAAK;QAAA;QAAA;QAAA;MAAA,QAET;IAElB,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACK;AAEb;AAAC,GApCQnB,QAAQ;EAAA,QAGGD,YAAY;AAAA;AAAA,KAHvBC,QAAQ;AAsCjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}