{"ast":null,"code":"import _slicedToArray from\"C:/Users/Administrator/Desktop/S07P31C209/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useRef,useEffect}from'react';import{ReactComponent as ArrowDropDown}from'@images/arrowDropDown.svg';import'@common/SelectBox.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function SelectBox(_ref){var reportType=_ref.reportType,setReportType=_ref.setReportType,options=_ref.options;// select 목록 표시 여부\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),showSelect=_useState2[0],setShowSelect=_useState2[1];var selectRef=useRef(null);useEffect(function(){window.addEventListener('mousedown',function(_ref2){var target=_ref2.target;if(selectRef.current&&!selectRef.current.contains(target)){setShowSelect(false);}});});return/*#__PURE__*/_jsxs(\"div\",{className:\"select\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"select-toggle\",onClick:function onClick(){return setShowSelect(true);},children:[/*#__PURE__*/_jsx(\"span\",{style:{color:reportType===-1?'#767676':'#000000'},children:reportType===-1?'유형을 선택해주세요.':options[reportType]}),/*#__PURE__*/_jsx(ArrowDropDown,{className:\"select-toggle-icon\",fill:\"#a07dff\",viewBox:\"0 0 50 50\",width:\"25\",height:\"25\"})]}),showSelect?/*#__PURE__*/_jsx(\"ul\",{className:\"select-ul\",ref:selectRef,children:options.map(function(option,index){return/*#__PURE__*/_jsx(\"li\",{className:\"select-li\",onClick:function onClick(){setReportType(index);setShowSelect(false);},children:option},option);})}):null]});}export default SelectBox;","map":{"version":3,"names":["useState","useRef","useEffect","ReactComponent","ArrowDropDown","SelectBox","reportType","setReportType","options","showSelect","setShowSelect","selectRef","window","addEventListener","target","current","contains","color","map","option","index"],"sources":["C:/Users/Administrator/Desktop/S07P31C209/frontend/src/components/common/SelectBox.tsx"],"sourcesContent":["import {useState, useRef, useEffect, Dispatch, SetStateAction} from 'react';\r\nimport {ReactComponent as ArrowDropDown} from '@images/arrowDropDown.svg';\r\nimport '@common/SelectBox.scss';\r\n\r\ninterface SelectBoxProps {\r\n  reportType: number;\r\n  setReportType: Dispatch<SetStateAction<number>>;\r\n  options: string[];\r\n}\r\n\r\nfunction SelectBox({reportType, setReportType, options}: SelectBoxProps) {\r\n  // select 목록 표시 여부\r\n  const [showSelect, setShowSelect] = useState(false);\r\n\r\n  const selectRef = useRef<HTMLUListElement>(null);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('mousedown', ({target}) => {\r\n      if (selectRef.current && !selectRef.current.contains(target as Node)) {\r\n        setShowSelect(false);\r\n      }\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div className=\"select\">\r\n      <div className=\"select-toggle\" onClick={() => setShowSelect(true)}>\r\n        <span style={{color: reportType === -1 ? '#767676' : '#000000'}}>\r\n          {reportType === -1 ? '유형을 선택해주세요.' : options[reportType]}\r\n        </span>\r\n        <ArrowDropDown\r\n          className=\"select-toggle-icon\"\r\n          fill=\"#a07dff\"\r\n          viewBox=\"0 0 50 50\"\r\n          width=\"25\"\r\n          height=\"25\"\r\n        />\r\n      </div>\r\n\r\n      {showSelect ? (\r\n        <ul className=\"select-ul\" ref={selectRef}>\r\n          {options.map((option: string, index) => (\r\n            <li\r\n              className=\"select-li\"\r\n              key={option}\r\n              onClick={() => {\r\n                setReportType(index);\r\n                setShowSelect(false);\r\n              }}>\r\n              {option}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectBox;\r\n"],"mappings":"wIAAA,OAAQA,QAAQ,CAAEC,MAAM,CAAEC,SAAS,KAAiC,OAAO,CAC3E,OAAQC,cAAc,GAAIC,cAAa,KAAO,2BAA2B,CACzE,MAAO,wBAAwB,CAAC,wFAQhC,QAASC,UAAS,MAAuD,IAArDC,WAAU,MAAVA,UAAU,CAAEC,aAAa,MAAbA,aAAa,CAAEC,OAAO,MAAPA,OAAO,CACpD;AACA,cAAoCR,QAAQ,CAAC,KAAK,CAAC,wCAA5CS,UAAU,eAAEC,aAAa,eAEhC,GAAMC,UAAS,CAAGV,MAAM,CAAmB,IAAI,CAAC,CAEhDC,SAAS,CAAC,UAAM,CACdU,MAAM,CAACC,gBAAgB,CAAC,WAAW,CAAE,eAAc,IAAZC,OAAM,OAANA,MAAM,CAC3C,GAAIH,SAAS,CAACI,OAAO,EAAI,CAACJ,SAAS,CAACI,OAAO,CAACC,QAAQ,CAACF,MAAM,CAAS,CAAE,CACpEJ,aAAa,CAAC,KAAK,CAAC,CACtB,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CAEF,mBACE,aAAK,SAAS,CAAC,QAAQ,wBACrB,aAAK,SAAS,CAAC,eAAe,CAAC,OAAO,CAAE,yBAAMA,cAAa,CAAC,IAAI,CAAC,EAAC,wBAChE,aAAM,KAAK,CAAE,CAACO,KAAK,CAAEX,UAAU,GAAK,CAAC,CAAC,CAAG,SAAS,CAAG,SAAS,CAAE,UAC7DA,UAAU,GAAK,CAAC,CAAC,CAAG,aAAa,CAAGE,OAAO,CAACF,UAAU,CAAC,EACnD,cACP,KAAC,aAAa,EACZ,SAAS,CAAC,oBAAoB,CAC9B,IAAI,CAAC,SAAS,CACd,OAAO,CAAC,WAAW,CACnB,KAAK,CAAC,IAAI,CACV,MAAM,CAAC,IAAI,EACX,GACE,CAELG,UAAU,cACT,WAAI,SAAS,CAAC,WAAW,CAAC,GAAG,CAAEE,SAAU,UACtCH,OAAO,CAACU,GAAG,CAAC,SAACC,MAAc,CAAEC,KAAK,qBACjC,WACE,SAAS,CAAC,WAAW,CAErB,OAAO,CAAE,kBAAM,CACbb,aAAa,CAACa,KAAK,CAAC,CACpBV,aAAa,CAAC,KAAK,CAAC,CACtB,CAAE,UACDS,MAAM,EALFA,MAAM,CAMR,EACN,CAAC,EACC,CACH,IAAI,GACJ,CAEV,CAEA,cAAed,UAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}