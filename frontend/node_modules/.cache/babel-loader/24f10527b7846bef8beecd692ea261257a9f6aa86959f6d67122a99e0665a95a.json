{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\S07P31C209\\\\frontend\\\\src\\\\components\\\\common\\\\SelectBox.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from 'react';\nimport { ReactComponent as ArrowDropDown } from '@images/arrowDropDown.svg';\nimport '@common/SelectBox.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SelectBox(_ref) {\n  _s();\n  let {\n    reportType,\n    setReportType,\n    options\n  } = _ref;\n  // select 목록 표시 여부\n  const [showSelect, setShowSelect] = useState(false);\n  const selectRef = useRef(null);\n  useEffect(() => {\n    window.addEventListener('mousedown', _ref2 => {\n      let {\n        target\n      } = _ref2;\n      if (selectRef.current && !selectRef.current.contains(target)) {\n        // setReportType(-1);\n        setShowSelect(false);\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"select\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-toggle\",\n      onClick: () => setShowSelect(prev => !prev),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: reportType === -1 ? '#767676' : '#000000'\n        },\n        children: reportType === -1 ? '유형을 선택해주세요.' : options[reportType]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ArrowDropDown, {\n        className: \"select-toggle-icon\",\n        fill: \"#a07dff\",\n        viewBox: \"0 0 50 50\",\n        width: \"25\",\n        height: \"25\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), showSelect ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"select-ul\",\n      ref: selectRef,\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"select-li\",\n        onClick: () => {\n          setReportType(index);\n          setShowSelect(prev => !prev);\n        },\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(SelectBox, \"k/HihgzoQqipLwoMWoiPHFsfI8w=\");\n_c = SelectBox;\nexport default SelectBox;\nvar _c;\n$RefreshReg$(_c, \"SelectBox\");","map":{"version":3,"names":["useState","useRef","useEffect","ReactComponent","ArrowDropDown","SelectBox","reportType","setReportType","options","showSelect","setShowSelect","selectRef","window","addEventListener","target","current","contains","prev","color","map","option","index"],"sources":["C:/Users/Administrator/Desktop/S07P31C209/frontend/src/components/common/SelectBox.tsx"],"sourcesContent":["import {useState, useRef, useEffect, Dispatch, SetStateAction} from 'react';\r\nimport {ReactComponent as ArrowDropDown} from '@images/arrowDropDown.svg';\r\nimport '@common/SelectBox.scss';\r\n\r\ninterface SelectBoxProps {\r\n  reportType: number;\r\n  setReportType: Dispatch<SetStateAction<number>>;\r\n  options: string[];\r\n}\r\n\r\nfunction SelectBox({reportType, setReportType, options}: SelectBoxProps) {\r\n  // select 목록 표시 여부\r\n  const [showSelect, setShowSelect] = useState(false);\r\n\r\n  const selectRef = useRef<HTMLUListElement>(null);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('mousedown', ({target}) => {\r\n      if (selectRef.current && !selectRef.current.contains(target as Node)) {\r\n        // setReportType(-1);\r\n        setShowSelect(false);\r\n      }\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div className=\"select\">\r\n      <div\r\n        className=\"select-toggle\"\r\n        onClick={() => setShowSelect(prev => !prev)}>\r\n        <span style={{color: reportType === -1 ? '#767676' : '#000000'}}>\r\n          {reportType === -1 ? '유형을 선택해주세요.' : options[reportType]}\r\n        </span>\r\n        <ArrowDropDown\r\n          className=\"select-toggle-icon\"\r\n          fill=\"#a07dff\"\r\n          viewBox=\"0 0 50 50\"\r\n          width=\"25\"\r\n          height=\"25\"\r\n        />\r\n      </div>\r\n\r\n      {showSelect ? (\r\n        <ul className=\"select-ul\" ref={selectRef}>\r\n          {options.map((option: string, index) => (\r\n            <li\r\n              className=\"select-li\"\r\n              key={option}\r\n              onClick={() => {\r\n                setReportType(index);\r\n                setShowSelect(prev => !prev);\r\n              }}>\r\n              {option}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectBox;\r\n"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAiC,OAAO;AAC3E,SAAQC,cAAc,IAAIC,aAAa,QAAO,2BAA2B;AACzE,OAAO,wBAAwB;AAAC;AAQhC,SAASC,SAAS,OAAuD;EAAA;EAAA,IAAtD;IAACC,UAAU;IAAEC,aAAa;IAAEC;EAAuB,CAAC;EACrE;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMW,SAAS,GAAGV,MAAM,CAAmB,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACdU,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAE,SAAc;MAAA,IAAb;QAACC;MAAM,CAAC;MAC5C,IAAIH,SAAS,CAACI,OAAO,IAAI,CAACJ,SAAS,CAACI,OAAO,CAACC,QAAQ,CAACF,MAAM,CAAS,EAAE;QACpE;QACAJ,aAAa,CAAC,KAAK,CAAC;MACtB;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,oBACE;IAAK,SAAS,EAAC,QAAQ;IAAA,wBACrB;MACE,SAAS,EAAC,eAAe;MACzB,OAAO,EAAE,MAAMA,aAAa,CAACO,IAAI,IAAI,CAACA,IAAI,CAAE;MAAA,wBAC5C;QAAM,KAAK,EAAE;UAACC,KAAK,EAAEZ,UAAU,KAAK,CAAC,CAAC,GAAG,SAAS,GAAG;QAAS,CAAE;QAAA,UAC7DA,UAAU,KAAK,CAAC,CAAC,GAAG,aAAa,GAAGE,OAAO,CAACF,UAAU;MAAC;QAAA;QAAA;QAAA;MAAA,QACnD,eACP,QAAC,aAAa;QACZ,SAAS,EAAC,oBAAoB;QAC9B,IAAI,EAAC,SAAS;QACd,OAAO,EAAC,WAAW;QACnB,KAAK,EAAC,IAAI;QACV,MAAM,EAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QACX;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,EAELG,UAAU,gBACT;MAAI,SAAS,EAAC,WAAW;MAAC,GAAG,EAAEE,SAAU;MAAA,UACtCH,OAAO,CAACW,GAAG,CAAC,CAACC,MAAc,EAAEC,KAAK,kBACjC;QACE,SAAS,EAAC,WAAW;QAErB,OAAO,EAAE,MAAM;UACbd,aAAa,CAACc,KAAK,CAAC;UACpBX,aAAa,CAACO,IAAI,IAAI,CAACA,IAAI,CAAC;QAC9B,CAAE;QAAA,UACDG;MAAM,GALFA,MAAM;QAAA;QAAA;QAAA;MAAA,QAOd;IAAC;MAAA;MAAA;MAAA;IAAA,QACC,GACH,IAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEV;AAAC,GAjDQf,SAAS;AAAA,KAATA,SAAS;AAmDlB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}