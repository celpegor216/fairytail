{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\S07P31C209\\\\frontend\\\\src\\\\components\\\\individual\\\\Notifications.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport items from '@screens/items.json';\nimport MyNotification from '@/components/individual/MyNotification';\nimport '@individual/Notifications.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Notifications() {\n  _s();\n  const [newItems, setNewItems] = useState(items);\n  const deleteEach = index => {\n    return () => setNewItems(() => newItems.filter((element, i) => i !== index));\n  };\n  const deleteAll = () => {\n    setNewItems(() => []);\n    console.log('하나씩 사라지는 효과');\n    console.log('백에 신호 보내기');\n  };\n  const moveMessage = (id, index) => {\n    deleteEach(index);\n    // 백에 삭제 요청\n  };\n\n  const handleDragStart = e => {\n    console.log(e);\n  };\n  const onClick = e => {\n    console.log(e);\n  };\n\n  // drag\n  // const ref = useRef(null!);\n  // const dragComponent = useRef(null!);\n\n  // const getElementIndex = ()\n  // const setDragItemId = {\n  //   grabItem: (index: number) => {\n  //     clcikElId\n  //   }\n  // }\n  // const onDragStart = (e: React.DragEvent<HTMLElement>, index: number) => {\n  //   e.dataTransfer.effectAllowed = 'move'\n  //   setDragItemId.grabItem(index)\n  // };\n  // const onDragEnter = (e: React.DragEvent<HTMLElement>, index: number) => {\n  //   setDragItemId.interSectItem(index)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"notifications-delete-all\",\n      onClick: deleteAll,\n      draggable: true,\n      children: \"\\uC804\\uCCB4 \\uC0AD\\uC81C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"individual-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"individual-container-list\",\n        children: newItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"white\",\n          children: \"\\uC0C8 \\uC88B\\uC544\\uC694 \\uC54C\\uB9BC\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this) : newItems.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(MyNotification, {\n            item: item,\n            deleteEach: deleteEach,\n            index: index\n            // onDragEnd={(e) => dragEndHandler(e)}\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Notifications, \"yi+mHxqbXfoViv2SDvGoAuRQdgA=\");\n_c = Notifications;\nexport default Notifications;\n\n// https://channel.io/ko/blog/react-dnd-tips-tricks\n\n// const ITEM_TYPE = 'SOME_COMPONENT'\n\n// export default function SomeComponent({ index, move }) {\n//   const [{ isDragging }, drag] = useDrag({\n//     // monitor.getItem() 의 내용으로 들어갈 값을 정의합니다.\n//     // type 값은 무조건 설정되어 있어야 합니다. (useDrop의 accept와 일치시켜야 함)\n//     item: { type: ITEM_TYPE, index },\n\n//     // Return array의 첫번째 값에 들어갈 객체를 정의합니다.\n//     collect: (monitor) => ({\n//       isDragging: monitor.isDragging(),\n//     }),\n\n//     // 드래그가 완전히 끝났을때 실행됩니다. 보통 여기에서 Redux dispatch를 많이 실행시킵니다.\n//     end: (item) => {\n//       console.log(`${index} should move to ${item.index}`)\n//     },\n//   })\n\n//   const [, drop] = useDrop({\n//     accept: ITEM_TYPE,\n//     hover: (item) => {\n//       if (item.index === index) {\n//         return null\n//       }\n\n//       move(item.index, index)\n\n//       item.index = index // item is mutable\n//     },\n//   })\n\n//   return (\n//     <div ref={node => drag(drop(node))} />\n//   )\n// }\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useState","items","MyNotification","Notifications","newItems","setNewItems","deleteEach","index","filter","element","i","deleteAll","console","log","moveMessage","id","handleDragStart","e","onClick","length","map","item"],"sources":["C:/Users/Administrator/Desktop/S07P31C209/frontend/src/components/individual/Notifications.tsx"],"sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport items from '@screens/items.json';\r\nimport MyNotification from '@/components/individual/MyNotification';\r\nimport '@individual/Notifications.scss';\r\n\r\nfunction Notifications() {\r\n  const [newItems, setNewItems] = useState<any[]>(items);\r\n  const deleteEach = (index: number) => {\r\n    return () =>\r\n      setNewItems(() => newItems.filter((element, i) => i !== index));\r\n  };\r\n  const deleteAll = () => {\r\n    setNewItems(() => []);\r\n    console.log('하나씩 사라지는 효과');\r\n    console.log('백에 신호 보내기');\r\n  };\r\n  const moveMessage = (id: number, index: number) => {\r\n    deleteEach(index);\r\n    // 백에 삭제 요청\r\n  };\r\n\r\n  const handleDragStart = (e: React.DragEvent<HTMLDivElement>) => {\r\n    console.log(e);\r\n  };\r\n  const onClick = (e: any) => {\r\n    console.log(e);\r\n  };\r\n\r\n  // drag\r\n  // const ref = useRef(null!);\r\n  // const dragComponent = useRef(null!);\r\n\r\n  // const getElementIndex = ()\r\n  // const setDragItemId = {\r\n  //   grabItem: (index: number) => {\r\n  //     clcikElId\r\n  //   }\r\n  // }\r\n  // const onDragStart = (e: React.DragEvent<HTMLElement>, index: number) => {\r\n  //   e.dataTransfer.effectAllowed = 'move'\r\n  //   setDragItemId.grabItem(index)\r\n  // };\r\n  // const onDragEnter = (e: React.DragEvent<HTMLElement>, index: number) => {\r\n  //   setDragItemId.interSectItem(index)\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <p className=\"notifications-delete-all\" onClick={deleteAll} draggable>\r\n        전체 삭제\r\n      </p>\r\n      {/* <div ref={dragPreview} style={{opacity: isDragging ? 0.5 : 1}}>\r\n        <div role=\"Handle\" ref={drag} />\r\n      </div>\r\n      <div\r\n        ref={drop}\r\n        role={'Dustbin'}\r\n        style={{backgroundColor: isOver ? 'red' : 'white'}}>\r\n        {canDrop ? 'Release to drop' : 'Drag a box here'}\r\n      </div> */}\r\n      <div className=\"individual-container\">\r\n        <div className=\"individual-container-list\">\r\n          {newItems.length === 0 ? (\r\n            <div className=\"white\">새 좋아요 알림이 없습니다</div>\r\n          ) : (\r\n            newItems.map((item, index) => {\r\n              return (\r\n                <MyNotification\r\n                  item={item}\r\n                  key={item.id}\r\n                  deleteEach={deleteEach}\r\n                  index={index}\r\n                  // onDragEnd={(e) => dragEndHandler(e)}\r\n                />\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Notifications;\r\n\r\n// https://channel.io/ko/blog/react-dnd-tips-tricks\r\n\r\n// const ITEM_TYPE = 'SOME_COMPONENT'\r\n\r\n// export default function SomeComponent({ index, move }) {\r\n//   const [{ isDragging }, drag] = useDrag({\r\n//     // monitor.getItem() 의 내용으로 들어갈 값을 정의합니다.\r\n//     // type 값은 무조건 설정되어 있어야 합니다. (useDrop의 accept와 일치시켜야 함)\r\n//     item: { type: ITEM_TYPE, index },\r\n\r\n//     // Return array의 첫번째 값에 들어갈 객체를 정의합니다.\r\n//     collect: (monitor) => ({\r\n//       isDragging: monitor.isDragging(),\r\n//     }),\r\n\r\n//     // 드래그가 완전히 끝났을때 실행됩니다. 보통 여기에서 Redux dispatch를 많이 실행시킵니다.\r\n//     end: (item) => {\r\n//       console.log(`${index} should move to ${item.index}`)\r\n//     },\r\n//   })\r\n\r\n//   const [, drop] = useDrop({\r\n//     accept: ITEM_TYPE,\r\n//     hover: (item) => {\r\n//       if (item.index === index) {\r\n//         return null\r\n//       }\r\n\r\n//       move(item.index, index)\r\n\r\n//       item.index = index // item is mutable\r\n//     },\r\n//   })\r\n\r\n//   return (\r\n//     <div ref={node => drag(drop(node))} />\r\n//   )\r\n// }\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAsBC,QAAQ,QAAO,OAAO;AACxD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,cAAc,MAAM,wCAAwC;AACnE,OAAO,gCAAgC;AAAC;AAAA;AAExC,SAASC,aAAa,GAAG;EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAQC,KAAK,CAAC;EACtD,MAAMK,UAAU,GAAIC,KAAa,IAAK;IACpC,OAAO,MACLF,WAAW,CAAC,MAAMD,QAAQ,CAACI,MAAM,CAAC,CAACC,OAAO,EAAEC,CAAC,KAAKA,CAAC,KAAKH,KAAK,CAAC,CAAC;EACnE,CAAC;EACD,MAAMI,SAAS,GAAG,MAAM;IACtBN,WAAW,CAAC,MAAM,EAAE,CAAC;IACrBO,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1BD,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EAC1B,CAAC;EACD,MAAMC,WAAW,GAAG,CAACC,EAAU,EAAER,KAAa,KAAK;IACjDD,UAAU,CAACC,KAAK,CAAC;IACjB;EACF,CAAC;;EAED,MAAMS,eAAe,GAAIC,CAAkC,IAAK;IAC9DL,OAAO,CAACC,GAAG,CAACI,CAAC,CAAC;EAChB,CAAC;EACD,MAAMC,OAAO,GAAID,CAAM,IAAK;IAC1BL,OAAO,CAACC,GAAG,CAACI,CAAC,CAAC;EAChB,CAAC;;EAED;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAA,wBACE;MAAG,SAAS,EAAC,0BAA0B;MAAC,OAAO,EAAEN,SAAU;MAAC,SAAS;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEjE,eAUJ;MAAK,SAAS,EAAC,sBAAsB;MAAA,uBACnC;QAAK,SAAS,EAAC,2BAA2B;QAAA,UACvCP,QAAQ,CAACe,MAAM,KAAK,CAAC,gBACpB;UAAK,SAAS,EAAC,OAAO;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAqB,GAE3Cf,QAAQ,CAACgB,GAAG,CAAC,CAACC,IAAI,EAAEd,KAAK,KAAK;UAC5B,oBACE,QAAC,cAAc;YACb,IAAI,EAAEc,IAAK;YAEX,UAAU,EAAEf,UAAW;YACvB,KAAK,EAAEC;YACP;UAAA,GAHKc,IAAI,CAACN,EAAE;YAAA;YAAA;YAAA;UAAA,QAIZ;QAEN,CAAC;MACF;QAAA;QAAA;QAAA;MAAA;IACG;MAAA;MAAA;MAAA;IAAA,QACF;EAAA,gBACL;AAEP;AAAC,GA5EQZ,aAAa;AAAA,KAAbA,aAAa;AA8EtB,eAAeA,aAAa;;AAE5B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}