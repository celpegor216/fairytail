{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\S07P31C209\\\\frontend\\\\src\\\\screens\\\\Main.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Room from '../components/main/Room';\nimport { useRecoilState } from 'recoil';\nimport { loadingState } from '@apis/Recoil';\nimport InitMessage from '@/apis/notifications/foregroundMessaging';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet prePath = '';\nfunction Main() {\n  _s();\n  const [isLoading, setIsLoading] = useRecoilState(loadingState);\n  // const []\n  // const info = {\n  //   title: 'BGM 자동재생 확인',\n  //   message: `BGM 재생을 허용하시겠습니까? \\n(BGM은 설정에서 변경 및 재생 여부 수정이 가능합니다)`,\n  // };\n  // const [onPlay, setOnplay] = useRecoilState(playingState);\n  // const [openConfirm, setOpenConfirm] = useState(false);\n  // const onConfirm = () => {\n  //   // 음악 이름을 넣자\n  //   localStorage.setItem('bgm', 'true');\n  //   setOpenConfirm(returnFalse);\n  //   setOnplay(returnTrue);\n  // };\n  // const onCancel = () => {\n  //   localStorage.setItem('bgm', 'false');\n  //   setOpenConfirm(returnFalse);\n  // };\n\n  if (isLoading) {\n    setIsLoading(false);\n    window.location.reload();\n    // setOpenConfirm(returnTrue)\n  }\n\n  // useEffect(() => {\n  //   if (!localStorage.getItem('bgm') && isLoading) {\n  //     setOpenConfirm(returnTrue);\n  //   }\n  // }, [isLoading]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InitMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Room, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Main, \"MIdPLKierNRVyToSTo4x9TIGU/U=\", false, function () {\n  return [useRecoilState];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","Room","useRecoilState","loadingState","InitMessage","prePath","Main","isLoading","setIsLoading","window","location","reload"],"sources":["C:/Users/Administrator/Desktop/S07P31C209/frontend/src/screens/Main.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\nimport Room from '../components/main/Room';\r\nimport {useRecoilState} from 'recoil';\r\nimport {loadingState, playingState} from '@apis/Recoil';\r\nimport InitMessage from '@/apis/notifications/foregroundMessaging';\r\nimport Confirm from '@/components/common/Confirm';\r\nimport Alert from '@/components/common/Alert';\r\nimport {returnFalse, returnTrue} from '@/components/common/commonFunc';\r\n\r\nlet prePath = '';\r\n\r\nfunction Main() {\r\n  const [isLoading, setIsLoading] = useRecoilState(loadingState);\r\n  // const []\r\n  // const info = {\r\n  //   title: 'BGM 자동재생 확인',\r\n  //   message: `BGM 재생을 허용하시겠습니까? \\n(BGM은 설정에서 변경 및 재생 여부 수정이 가능합니다)`,\r\n  // };\r\n  // const [onPlay, setOnplay] = useRecoilState(playingState);\r\n  // const [openConfirm, setOpenConfirm] = useState(false);\r\n  // const onConfirm = () => {\r\n  //   // 음악 이름을 넣자\r\n  //   localStorage.setItem('bgm', 'true');\r\n  //   setOpenConfirm(returnFalse);\r\n  //   setOnplay(returnTrue);\r\n  // };\r\n  // const onCancel = () => {\r\n  //   localStorage.setItem('bgm', 'false');\r\n  //   setOpenConfirm(returnFalse);\r\n  // };\r\n\r\n  if (isLoading) {\r\n    setIsLoading(false);\r\n    window.location.reload();\r\n    // setOpenConfirm(returnTrue)\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   if (!localStorage.getItem('bgm') && isLoading) {\r\n  //     setOpenConfirm(returnTrue);\r\n  //   }\r\n  // }, [isLoading]);\r\n  return (\r\n    <>\r\n      <InitMessage />\r\n      {/* <Confirm\r\n        info={info}\r\n        onConfirmed={onConfirm}\r\n        onCancel={onCancel}\r\n        open={openConfirm}\r\n      /> */}\r\n      {/* <Alert info={} open={} onConfirmed={} /> */}\r\n      <Room />\r\n    </>\r\n  );\r\n}\r\nexport default Main;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAA6B,OAAO;AAEhD,OAAOC,IAAI,MAAM,yBAAyB;AAC1C,SAAQC,cAAc,QAAO,QAAQ;AACrC,SAAQC,YAAY,QAAqB,cAAc;AACvD,OAAOC,WAAW,MAAM,0CAA0C;AAAC;AAAA;AAKnE,IAAIC,OAAO,GAAG,EAAE;AAEhB,SAASC,IAAI,GAAG;EAAA;EACd,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,cAAc,CAACC,YAAY,CAAC;EAC9D;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAII,SAAS,EAAE;IACbC,YAAY,CAAC,KAAK,CAAC;IACnBC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;IACxB;EACF;;EAEA;EACA;EACA;EACA;EACA;EACA,oBACE;IAAA,wBACE,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eAQf,QAAC,IAAI;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACP;AAEP;AAAC,GA5CQL,IAAI;EAAA,QACuBJ,cAAc;AAAA;AAAA,KADzCI,IAAI;AA6Cb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}