{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\S07P31C209\\\\frontend\\\\src\\\\screens\\\\MessageList.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport '@screens/MessageList.scss';\nimport MyMessage from '@messageList/MyMessage';\nimport MoveToBack from '@common/MoveToBack';\nimport { main } from '@apis/router';\nimport { getMesssageList } from '@/apis/messageList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageList() {\n  _s();\n  const [messageItems, setMessageItems] = useState([]);\n  const location = useLocation();\n\n  // 0: text, 1: img, 2:video, 3:audio\n  const types = [0, 1, 2, 3];\n  const userId = Number(localStorage.getItem('userId'));\n  useEffect(() => {\n    if (userId !== null) {\n      types.forEach(type => {\n        getMesssageList(type, userId).then(res => {\n          setMessageItems(prev => prev.concat(res.data));\n        }).catch(err => {\n          console.log(err);\n        });\n      });\n    }\n    if (messageItems.length > 0) {\n      console.log(messageItems[0].date);\n    }\n  }, [location.pathname]);\n\n  // messageList 최신순으로 정렬\n  useEffect(() => {\n    if (messageItems.length > 0) {\n      messageItems.sort((a, b) => a.date < b.date ? 1 : a.date > b.date ? -1 : 0);\n    }\n  }, [messageItems]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messageList\",\n    children: [/*#__PURE__*/_jsxDEV(MoveToBack, {\n      path: main()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageList-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messageList-container-info\",\n        children: \"\\uB0B4 \\uC774\\uC57C\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messageList-container-list\",\n        children: [messageItems.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messageList-container-list-empty\",\n          children: \"\\uC791\\uC131\\uD55C \\uBA54\\uC138\\uC9C0\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), messageItems.length !== 0 && messageItems.map(messageItem => {\n          return /*#__PURE__*/_jsxDEV(MyMessage, {\n            messageItem: messageItem\n          }, `${messageItem.type}+${messageItem.postId}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(MessageList, \"FKRuLb7ZYSQHyqaw5T5l765W8M8=\", false, function () {\n  return [useLocation];\n});\n_c = MessageList;\nexport default MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["useEffect","useState","useLocation","MyMessage","MoveToBack","main","getMesssageList","MessageList","messageItems","setMessageItems","location","types","userId","Number","localStorage","getItem","forEach","type","then","res","prev","concat","data","catch","err","console","log","length","date","pathname","sort","a","b","map","messageItem","postId"],"sources":["C:/Users/Administrator/Desktop/S07P31C209/frontend/src/screens/MessageList.tsx"],"sourcesContent":["import {useEffect, useState} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\nimport '@screens/MessageList.scss';\r\nimport MyMessage from '@messageList/MyMessage';\r\nimport MoveToBack from '@common/MoveToBack';\r\nimport {main} from '@apis/router';\r\nimport {getMesssageList} from '@/apis/messageList';\r\n\r\ninterface items {\r\n  postId: number;\r\n  date: string;\r\n  emojiNo: number;\r\n  likeCnt: number;\r\n  status: number;\r\n  title: string;\r\n  type: number;\r\n}\r\n\r\nfunction MessageList() {\r\n  const [messageItems, setMessageItems] = useState<items[]>([]);\r\n  const location = useLocation();\r\n\r\n  // 0: text, 1: img, 2:video, 3:audio\r\n  const types = [0, 1, 2, 3];\r\n  const userId = Number(localStorage.getItem('userId'));\r\n  useEffect(() => {\r\n    if (userId !== null) {\r\n      types.forEach(type => {\r\n        getMesssageList(type, userId)\r\n          .then(res => {\r\n            setMessageItems(prev => prev.concat(res.data));\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          });\r\n      });\r\n    }\r\n    if (messageItems.length > 0) {\r\n      console.log(messageItems[0].date);\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  // messageList 최신순으로 정렬\r\n  useEffect(() => {\r\n    if (messageItems.length > 0) {\r\n      messageItems.sort((a, b) =>\r\n        a.date < b.date ? 1 : a.date > b.date ? -1 : 0,\r\n      );\r\n    }\r\n  }, [messageItems]);\r\n\r\n  return (\r\n    <div className=\"messageList\">\r\n      <MoveToBack path={main()} />\r\n      {/* <div className=\"navbarContainer\">\r\n      </div> */}\r\n      <div className=\"messageList-container\">\r\n        <div className=\"messageList-container-info\">내 이야기</div>\r\n\r\n        <div className=\"messageList-container-list\">\r\n          {messageItems.length === 0 && (\r\n            <div className=\"messageList-container-list-empty\">\r\n              작성한 메세지가 없습니다.\r\n            </div>\r\n          )}\r\n          {messageItems.length !== 0 &&\r\n            messageItems.map(messageItem => {\r\n              return (\r\n                <MyMessage\r\n                  key={`${messageItem.type}+${messageItem.postId}`}\r\n                  messageItem={messageItem}\r\n                />\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}