{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\S07P31C209\\\\frontend\\\\src\\\\screens\\\\Map.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { MapContainer, TileLayer, Marker, ZoomControl, useMap } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { useEffect, useState } from 'react';\nimport '@screens/Map.scss';\nimport { CustomMarkerIcon } from '@map/CustomMarker';\nimport ClickMarker from '@map/ClickMarker';\nimport MoveToBack from '@common/MoveToBack';\nimport OpenHelp from '@common/OpenHelp';\nimport { getMessageMap } from '@apis/map';\n\n// 최소, 최대 범위 이내 랜덤 실수 생성\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction generateRandomFloat(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\n// 지도 중심 지정\nfunction SetCenter(_ref) {\n  _s();\n  let {\n    center\n  } = _ref;\n  const map = useMap();\n  useEffect(() => {\n    map.setView(center);\n  }, [center]);\n  return null;\n}\n_s(SetCenter, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = SetCenter;\nfunction Map() {\n  _s2();\n  // 지도 클릭 시 팝업 표시, 해당 위치 좌표값\n  const [isClicked, setIsClicked] = useState(false);\n  const [position, setPosition] = useState({\n    lat: -999,\n    lng: -999\n  });\n\n  // 지도 중심\n  const [center, setCenter] = useState({\n    lat: 0,\n    lng: 0\n  });\n\n  // 데이터 및 데이터 받아오기가 끝났는지 확인하기 위한 state\n  const [isFinished, setIsFinished] = useState(-1);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // 현재 위치 받아와서 지도 중심 설정\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async pos => {\n        setCenter({\n          lat: pos.coords.latitude,\n          lng: pos.coords.longitude\n        });\n      });\n    }\n\n    // 서버에서 데이터 받아오기\n    for (let i = 0; i < 4; i++) {\n      getMessageMap(i).then(res => {\n        setData(prev => prev.concat(res.data));\n        setIsFinished(prev => prev + 1);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  });\n\n  // 받은 데이터 화면에 마커로 표시하기\n  const Markers = () => {\n    const markers = data.map((position, index) => {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        position: position,\n        icon: CustomMarkerIcon\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 14\n      }, this);\n    });\n    return markers;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: [/*#__PURE__*/_jsxDEV(MoveToBack, {\n      path: \"/main\",\n      color: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OpenHelp, {\n      imagesIndex: 1,\n      color: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-random\",\n      onClick: () => {\n        setPosition({\n          lat: generateRandomFloat(-90, 90),\n          lng: generateRandomFloat(-180, 180)\n        });\n        setIsClicked(true);\n      },\n      children: '랜덤 위치로\\n이동하기'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      attributionControl: false,\n      zoomControl: false,\n      maxBounds: [[-90, -180], [90, 180]],\n      minZoom: 2,\n      maxZoom: 14,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      center: center,\n      zoom: 14,\n      scrollWheelZoom: true,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        noWrap: true,\n        url: \"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), isFinished === 3 ? Markers() : null, /*#__PURE__*/_jsxDEV(ClickMarker, {\n        isClicked: isClicked,\n        setIsClicked: setIsClicked,\n        position: position,\n        setPosition: setPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ZoomControl, {\n        position: \"bottomright\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SetCenter, {\n        center: center\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s2(Map, \"SVwZclbTNFcFQvS2TI3Hdb348es=\");\n_c2 = Map;\nexport default Map;\nvar _c, _c2;\n$RefreshReg$(_c, \"SetCenter\");\n$RefreshReg$(_c2, \"Map\");","map":{"version":3,"names":["MapContainer","TileLayer","Marker","ZoomControl","useMap","useEffect","useState","CustomMarkerIcon","ClickMarker","MoveToBack","OpenHelp","getMessageMap","generateRandomFloat","min","max","Math","random","SetCenter","center","map","setView","Map","isClicked","setIsClicked","position","setPosition","lat","lng","setCenter","isFinished","setIsFinished","data","setData","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","i","then","res","prev","concat","catch","err","console","log","Markers","markers","index","width","height"],"sources":["C:/Users/Administrator/Desktop/S07P31C209/frontend/src/screens/Map.jsx"],"sourcesContent":["import {\r\n  MapContainer,\r\n  TileLayer,\r\n  Marker,\r\n  ZoomControl,\r\n  useMap,\r\n} from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport {useEffect, useState} from 'react';\r\n\r\nimport '@screens/Map.scss';\r\nimport {CustomMarkerIcon} from '@map/CustomMarker';\r\nimport ClickMarker from '@map/ClickMarker';\r\nimport MoveToBack from '@common/MoveToBack';\r\nimport OpenHelp from '@common/OpenHelp';\r\n\r\nimport {getMessageMap} from '@apis/map';\r\n\r\n// 최소, 최대 범위 이내 랜덤 실수 생성\r\nfunction generateRandomFloat(min, max) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\n\r\n// 지도 중심 지정\r\nfunction SetCenter({center}) {\r\n  const map = useMap();\r\n\r\n  useEffect(() => {\r\n    map.setView(center);\r\n  }, [center]);\r\n\r\n  return null;\r\n}\r\n\r\nfunction Map() {\r\n  // 지도 클릭 시 팝업 표시, 해당 위치 좌표값\r\n  const [isClicked, setIsClicked] = useState(false);\r\n  const [position, setPosition] = useState({lat: -999, lng: -999});\r\n\r\n  // 지도 중심\r\n  const [center, setCenter] = useState({lat: 0, lng: 0});\r\n\r\n  // 데이터 및 데이터 받아오기가 끝났는지 확인하기 위한 state\r\n  const [isFinished, setIsFinished] = useState(-1);\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // 현재 위치 받아와서 지도 중심 설정\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(async pos => {\r\n        setCenter({\r\n          lat: pos.coords.latitude,\r\n          lng: pos.coords.longitude,\r\n        });\r\n      });\r\n    }\r\n\r\n    // 서버에서 데이터 받아오기\r\n    for (let i = 0; i < 4; i++) {\r\n      getMessageMap(i)\r\n        .then(res => {\r\n          setData(prev => prev.concat(res.data));\r\n          setIsFinished(prev => prev + 1);\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  });\r\n\r\n  // 받은 데이터 화면에 마커로 표시하기\r\n  const Markers = () => {\r\n    const markers = data.map((position, index) => {\r\n      return <Marker key={index} position={position} icon={CustomMarkerIcon} />;\r\n    });\r\n    return markers;\r\n  };\r\n\r\n  return (\r\n    <div className=\"screen\">\r\n      <MoveToBack path=\"/main\" color=\"black\" />\r\n      <OpenHelp imagesIndex={1} color=\"black\" />\r\n      <div\r\n        className=\"map-random\"\r\n        onClick={() => {\r\n          setPosition({\r\n            lat: generateRandomFloat(-90, 90),\r\n            lng: generateRandomFloat(-180, 180),\r\n          });\r\n          setIsClicked(true);\r\n        }}>\r\n        {'랜덤 위치로\\n이동하기'}\r\n      </div>\r\n\r\n      <MapContainer\r\n        attributionControl={false}\r\n        zoomControl={false}\r\n        maxBounds={[\r\n          [-90, -180],\r\n          [90, 180],\r\n        ]}\r\n        minZoom={2}\r\n        maxZoom={14}\r\n        style={{width: '100%', height: '100%'}}\r\n        center={center}\r\n        zoom={14}\r\n        scrollWheelZoom={true}>\r\n        <TileLayer\r\n          noWrap={true}\r\n          url=\"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png\"\r\n        />\r\n        {isFinished === 3 ? Markers() : null}\r\n        <ClickMarker\r\n          isClicked={isClicked}\r\n          setIsClicked={setIsClicked}\r\n          position={position}\r\n          setPosition={setPosition}\r\n        />\r\n        <ZoomControl position=\"bottomright\" />\r\n        <SetCenter center={center} />\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}