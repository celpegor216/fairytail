{"ast":null,"code":"// ** fcm으로 요청보낼 때 필요한 토큰 관련\n\nimport { getMessaging, getToken } from 'firebase/messaging';\nimport app from '@apis/notifications/firebaseConfig';\nconst messaging = getMessaging(app);\n\n// 토큰 받아오기\nexport const initToken = async () => {\n  const token = getToken(messaging, {\n    vapidKey: process.env.REACT_APP_VAPID_KEY\n  }).then(currentToken => {\n    if (currentToken) {\n      // console.log(currentToken);\n      return currentToken;\n    } else {\n      console.log('No registration token available. Request permission to generate one.');\n      return '';\n    }\n  }).catch(err => {\n    console.log('An error occurred while retrieving token. ', err);\n    return '';\n  });\n  return token;\n};\n\n// 등록 토큰에 액세스 (알림 권한 요청)\nexport const requestPermission = () => {\n  console.log(Notification.permission);\n  if (Notification.permission === 'default') {\n    console.log('Requesting permission...');\n    Notification.requestPermission().then(permission => {\n      if (permission === 'granted') {\n        console.log('Notification permission granted.');\n      }\n    });\n  }\n};","map":{"version":3,"names":["getMessaging","getToken","app","messaging","initToken","token","vapidKey","process","env","REACT_APP_VAPID_KEY","then","currentToken","console","log","catch","err","requestPermission","Notification","permission"],"sources":["C:/Users/Administrator/Desktop/S07P31C209/frontend/src/apis/notifications/getMessagingToken.ts"],"sourcesContent":["// ** fcm으로 요청보낼 때 필요한 토큰 관련\r\n\r\nimport {getMessaging, getToken} from 'firebase/messaging';\r\nimport app from '@apis/notifications/firebaseConfig';\r\n\r\nconst messaging = getMessaging(app);\r\n\r\n// 토큰 받아오기\r\nexport const initToken = async () => {\r\n  const token = getToken(messaging, {\r\n    vapidKey: process.env.REACT_APP_VAPID_KEY,\r\n  })\r\n    .then(currentToken => {\r\n      if (currentToken) {\r\n        // console.log(currentToken);\r\n        return currentToken;\r\n      } else {\r\n        console.log(\r\n          'No registration token available. Request permission to generate one.',\r\n        );\r\n        return '';\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log('An error occurred while retrieving token. ', err);\r\n      return '';\r\n    });\r\n  return token;\r\n};\r\n\r\n// 등록 토큰에 액세스 (알림 권한 요청)\r\nexport const requestPermission = () => {\r\n  console.log(Notification.permission);\r\n  if (Notification.permission === 'default') {\r\n    console.log('Requesting permission...');\r\n    Notification.requestPermission().then(permission => {\r\n      if (permission === 'granted') {\r\n        console.log('Notification permission granted.');\r\n      }\r\n    });\r\n  }\r\n};\r\n"],"mappings":"AAAA;;AAEA,SAAQA,YAAY,EAAEC,QAAQ,QAAO,oBAAoB;AACzD,OAAOC,GAAG,MAAM,oCAAoC;AAEpD,MAAMC,SAAS,GAAGH,YAAY,CAACE,GAAG,CAAC;;AAEnC;AACA,OAAO,MAAME,SAAS,GAAG,YAAY;EACnC,MAAMC,KAAK,GAAGJ,QAAQ,CAACE,SAAS,EAAE;IAChCG,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC;EACxB,CAAC,CAAC,CACCC,IAAI,CAACC,YAAY,IAAI;IACpB,IAAIA,YAAY,EAAE;MAChB;MACA,OAAOA,YAAY;IACrB,CAAC,MAAM;MACLC,OAAO,CAACC,GAAG,CACT,sEAAsE,CACvE;MACD,OAAO,EAAE;IACX;EACF,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;IACZH,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEE,GAAG,CAAC;IAC9D,OAAO,EAAE;EACX,CAAC,CAAC;EACJ,OAAOV,KAAK;AACd,CAAC;;AAED;AACA,OAAO,MAAMW,iBAAiB,GAAG,MAAM;EACrCJ,OAAO,CAACC,GAAG,CAACI,YAAY,CAACC,UAAU,CAAC;EACpC,IAAID,YAAY,CAACC,UAAU,KAAK,SAAS,EAAE;IACzCN,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACvCI,YAAY,CAACD,iBAAiB,EAAE,CAACN,IAAI,CAACQ,UAAU,IAAI;MAClD,IAAIA,UAAU,KAAK,SAAS,EAAE;QAC5BN,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;MACjD;IACF,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}