{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Administrator/Desktop/S07P31C209/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/Administrator/Desktop/S07P31C209/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{getMessaging,getToken}from'firebase/messaging';import app from'@apis/notifications/firebaseConfig';var messaging=getMessaging(app);export var initToken=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var token;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:token=getToken(messaging,{vapidKey:process.env.REACT_APP_VAPID_KEY}).then(function(currentToken){if(currentToken){console.log(currentToken);return currentToken;}else{console.log('No registration token available. Request permission to generate one.');return'';}}).catch(function(err){console.log('An error occurred while retrieving token. ',err);return'';});return _context.abrupt(\"return\",token);case 2:case\"end\":return _context.stop();}}},_callee);}));return function initToken(){return _ref.apply(this,arguments);};}();// 등록 토큰에 액세스 (알림 권한 요청)\nexport var requestPermission=function requestPermission(){console.log(Notification.permission);if(Notification.permission==='default'){console.log('Requesting permission...');Notification.requestPermission().then(function(permission){if(permission==='granted'){console.log('Notification permission granted.');}});}};","map":{"version":3,"names":["getMessaging","getToken","app","messaging","initToken","token","vapidKey","process","env","REACT_APP_VAPID_KEY","then","currentToken","console","log","catch","err","requestPermission","Notification","permission"],"sources":["C:/Users/Administrator/Desktop/S07P31C209/frontend/src/apis/notifications/getMessagingToken.ts"],"sourcesContent":["import {getMessaging, getToken} from 'firebase/messaging';\r\nimport app from '@apis/notifications/firebaseConfig';\r\n\r\nconst messaging = getMessaging(app);\r\n\r\nexport const initToken = async () => {\r\n  const token = getToken(messaging, {\r\n    vapidKey: process.env.REACT_APP_VAPID_KEY,\r\n  })\r\n    .then(currentToken => {\r\n      if (currentToken) {\r\n        console.log(currentToken);\r\n        return currentToken;\r\n      } else {\r\n        console.log(\r\n          'No registration token available. Request permission to generate one.',\r\n        );\r\n        return '';\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.log('An error occurred while retrieving token. ', err);\r\n      return '';\r\n    });\r\n  return token;\r\n};\r\n\r\n// 등록 토큰에 액세스 (알림 권한 요청)\r\nexport const requestPermission = () => {\r\n  console.log(Notification.permission)\r\n  if (Notification.permission === 'default') {\r\n    console.log('Requesting permission...');\r\n    Notification.requestPermission().then(permission => {\r\n      if (permission === 'granted') {\r\n        console.log('Notification permission granted.');\r\n      }\r\n    });\r\n  }\r\n};\r\n"],"mappings":"gSAAA,OAAQA,YAAY,CAAEC,QAAQ,KAAO,oBAAoB,CACzD,MAAOC,IAAG,KAAM,oCAAoC,CAEpD,GAAMC,UAAS,CAAGH,YAAY,CAACE,GAAG,CAAC,CAEnC,MAAO,IAAME,UAAS,4FAAG,+IACjBC,KAAK,CAAGJ,QAAQ,CAACE,SAAS,CAAE,CAChCG,QAAQ,CAAEC,OAAO,CAACC,GAAG,CAACC,mBACxB,CAAC,CAAC,CACCC,IAAI,CAAC,SAAAC,YAAY,CAAI,CACpB,GAAIA,YAAY,CAAE,CAChBC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC,CACzB,MAAOA,aAAY,CACrB,CAAC,IAAM,CACLC,OAAO,CAACC,GAAG,CACT,sEAAsE,CACvE,CACD,MAAO,EAAE,CACX,CACF,CAAC,CAAC,CACDC,KAAK,CAAC,SAAAC,GAAG,CAAI,CACZH,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAEE,GAAG,CAAC,CAC9D,MAAO,EAAE,CACX,CAAC,CAAC,iCACGV,KAAK,wDACb,kBApBYD,UAAS,0CAoBrB,CAED;AACA,MAAO,IAAMY,kBAAiB,CAAG,QAApBA,kBAAiB,EAAS,CACrCJ,OAAO,CAACC,GAAG,CAACI,YAAY,CAACC,UAAU,CAAC,CACpC,GAAID,YAAY,CAACC,UAAU,GAAK,SAAS,CAAE,CACzCN,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC,CACvCI,YAAY,CAACD,iBAAiB,EAAE,CAACN,IAAI,CAAC,SAAAQ,UAAU,CAAI,CAClD,GAAIA,UAAU,GAAK,SAAS,CAAE,CAC5BN,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC,CACjD,CACF,CAAC,CAAC,CACJ,CACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}