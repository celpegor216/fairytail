{"ast":null,"code":"import _slicedToArray from\"C:/Users/Administrator/Desktop/S07P31C209/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import Room from'../components/main/Room';import{useRecoilState}from'recoil';import{loadingState}from'@apis/Recoil';import InitMessage from'@/apis/notifications/foregroundMessaging';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var prePath='';function Main(){var _useRecoilState=useRecoilState(loadingState),_useRecoilState2=_slicedToArray(_useRecoilState,2),isLoading=_useRecoilState2[0],setIsLoading=_useRecoilState2[1];// const []\n// const info = {\n//   title: 'BGM 자동재생 확인',\n//   message: `BGM 재생을 허용하시겠습니까? \\n(BGM은 설정에서 변경 및 재생 여부 수정이 가능합니다)`,\n// };\n// const [onPlay, setOnplay] = useRecoilState(playingState);\n// const [openConfirm, setOpenConfirm] = useState(false);\n// const onConfirm = () => {\n//   // 음악 이름을 넣자\n//   localStorage.setItem('bgm', 'true');\n//   setOpenConfirm(returnFalse);\n//   setOnplay(returnTrue);\n// };\n// const onCancel = () => {\n//   localStorage.setItem('bgm', 'false');\n//   setOpenConfirm(returnFalse);\n// };\nif(isLoading){setIsLoading(false);window.location.reload();// setOpenConfirm(returnTrue)\n}// useEffect(() => {\n//   if (!localStorage.getItem('bgm') && isLoading) {\n//     setOpenConfirm(returnTrue);\n//   }\n// }, [isLoading]);\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(InitMessage,{}),/*#__PURE__*/_jsx(Room,{})]});}export default Main;","map":{"version":3,"names":["React","Room","useRecoilState","loadingState","InitMessage","prePath","Main","isLoading","setIsLoading","window","location","reload"],"sources":["C:/Users/Administrator/Desktop/S07P31C209/frontend/src/screens/Main.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {useLocation} from 'react-router-dom';\r\nimport Room from '../components/main/Room';\r\nimport {useRecoilState} from 'recoil';\r\nimport {loadingState, playingState} from '@apis/Recoil';\r\nimport InitMessage from '@/apis/notifications/foregroundMessaging';\r\nimport Confirm from '@/components/common/Confirm';\r\nimport Alert from '@/components/common/Alert';\r\nimport {returnFalse, returnTrue} from '@/components/common/commonFunc';\r\n\r\nlet prePath = '';\r\n\r\nfunction Main() {\r\n  const [isLoading, setIsLoading] = useRecoilState(loadingState);\r\n  // const []\r\n  // const info = {\r\n  //   title: 'BGM 자동재생 확인',\r\n  //   message: `BGM 재생을 허용하시겠습니까? \\n(BGM은 설정에서 변경 및 재생 여부 수정이 가능합니다)`,\r\n  // };\r\n  // const [onPlay, setOnplay] = useRecoilState(playingState);\r\n  // const [openConfirm, setOpenConfirm] = useState(false);\r\n  // const onConfirm = () => {\r\n  //   // 음악 이름을 넣자\r\n  //   localStorage.setItem('bgm', 'true');\r\n  //   setOpenConfirm(returnFalse);\r\n  //   setOnplay(returnTrue);\r\n  // };\r\n  // const onCancel = () => {\r\n  //   localStorage.setItem('bgm', 'false');\r\n  //   setOpenConfirm(returnFalse);\r\n  // };\r\n\r\n  if (isLoading) {\r\n    setIsLoading(false);\r\n    window.location.reload();\r\n    // setOpenConfirm(returnTrue)\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   if (!localStorage.getItem('bgm') && isLoading) {\r\n  //     setOpenConfirm(returnTrue);\r\n  //   }\r\n  // }, [isLoading]);\r\n  return (\r\n    <>\r\n      <InitMessage />\r\n      {/* <Confirm\r\n        info={info}\r\n        onConfirmed={onConfirm}\r\n        onCancel={onCancel}\r\n        open={openConfirm}\r\n      /> */}\r\n      {/* <Alert info={} open={} onConfirmed={} /> */}\r\n      <Room />\r\n    </>\r\n  );\r\n}\r\nexport default Main;\r\n"],"mappings":"wIAAA,MAAOA,MAAK,KAA6B,OAAO,CAEhD,MAAOC,KAAI,KAAM,yBAAyB,CAC1C,OAAQC,cAAc,KAAO,QAAQ,CACrC,OAAQC,YAAY,KAAqB,cAAc,CACvD,MAAOC,YAAW,KAAM,0CAA0C,CAAC,6IAKnE,GAAIC,QAAO,CAAG,EAAE,CAEhB,QAASC,KAAI,EAAG,CACd,oBAAkCJ,cAAc,CAACC,YAAY,CAAC,oDAAvDI,SAAS,qBAAEC,YAAY,qBAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAID,SAAS,CAAE,CACbC,YAAY,CAAC,KAAK,CAAC,CACnBC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE,CACxB;AACF,CAEA;AACA;AACA;AACA;AACA;AACA,mBACE,wCACE,KAAC,WAAW,IAAG,cAQf,KAAC,IAAI,IAAG,GACP,CAEP,CACA,cAAeL,KAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}