{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\S07P31C209\\\\frontend\\\\src\\\\components\\\\individual\\\\MyNotification.tsx\",\n  _s = $RefreshSig$();\n// ** 각 알림당 설정\nimport React, { useRef, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport '@individual/MyNotification.scss';\nimport { smallEmojiArr } from '@emojis/index';\nimport { toMessageDetail } from '@apis/router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyNotification(_ref) {\n  _s();\n  let {\n    item,\n    index,\n    deleteEach,\n    dragFlag\n  } = _ref;\n  const ref = useRef(null);\n  const navigate = useNavigate();\n  // const [originPos, setOriginPos] = useState({x: 0, y: 0});\n  const [deleted, setDeleted] = useState(false);\n  const [isGrabbing, setIsGrabbing] = useState(false);\n  const {\n    postId,\n    title,\n    emojiNo,\n    type\n  } = item;\n  const toDetail = postId => {\n    return () => navigate(toMessageDetail(postId, type));\n  };\n  const shortTitle = () => {\n    if (title.length > 6) {\n      return `${title.slice(0, 6)}...`;\n    } else {\n      return title;\n    }\n  };\n  const handleDragStart = e => {\n    if (dragFlag) {\n      var _e$dataTransfer;\n      const {\n        current\n      } = ref;\n      const img = new Image();\n      (_e$dataTransfer = e.dataTransfer) === null || _e$dataTransfer === void 0 ? void 0 : _e$dataTransfer.setDragImage(img, 0, 0);\n      e.dataTransfer.effectAllowed = 'move';\n      const originPosTemp = {\n        x: current.offsetLeft,\n        y: current.offsetTop\n      };\n      // setOriginPos(() => originPosTemp);\n      setIsGrabbing(true);\n    }\n  };\n  const handleDragOver = e => {\n    if (dragFlag) {\n      e.preventDefault();\n      ref.current.style.marginLeft = `${e.clientX * 0.4}px`;\n    }\n  };\n  const handleDragEnd = e => {\n    if (dragFlag) {\n      e.preventDefault();\n      setIsGrabbing(false);\n      e.dataTransfer.dropEffect = 'move';\n      const {\n        current\n      } = ref;\n      if ((current.offsetLeft + current.offsetWidth) / 2 < e.clientX * 0.4) {\n        setDeleted(true);\n        console.log(true);\n        if (deleteEach && index !== undefined) {\n          deleteEach(index);\n        }\n      } else {\n        ref.current.style.marginLeft = `0`;\n        setDeleted(false);\n      }\n    }\n  };\n  const handleTouchStart = e => {\n    if (dragFlag) {\n      const {\n        current\n      } = ref;\n      const originPosTemp = {\n        x: current.offsetLeft,\n        y: current.offsetTop\n      };\n      // setOriginPos(() => originPosTemp);\n      setIsGrabbing(true);\n    }\n  };\n  const handleTouchMove = e => {\n    if (dragFlag) {\n      ref.current.style.marginLeft = `${e.changedTouches[0].clientX}px`;\n    }\n  };\n  const handleTouchEnd = e => {\n    e.preventDefault();\n    if (dragFlag) {\n      setIsGrabbing(false);\n      const {\n        current\n      } = ref;\n      if ((current.offsetLeft + current.offsetWidth) / 2 < e.changedTouches[0].clientX) {\n        setDeleted(true);\n        if (deleteEach && index) {\n          deleteEach(index);\n        }\n      } else {\n        ref.current.style.marginLeft = '0';\n        setDeleted(false);\n      }\n    }\n  };\n  const dynamicClass = () => {\n    let result = 'myMessage';\n    if (isGrabbing) {\n      result += ' grabbed';\n    }\n    if (deleted) {\n      result += ' deleted';\n    }\n    return result;\n  };\n  // useEffect(() => {\n  //   dynamicClass();\n  // }, [isGrabbing, deleted]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: dynamicClass(),\n    draggable: dragFlag,\n    onClick: toDetail(postId),\n    onDragStart: handleDragStart,\n    onDragOver: handleDragOver,\n    onDragEnd: handleDragEnd,\n    onTouchStart: handleTouchStart,\n    onTouchMove: handleTouchMove,\n    onTouchEnd: handleTouchEnd,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: smallEmojiArr[emojiNo],\n      alt: \"emoji\",\n      className: \"myNotification-emoji\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"myNotification-message\",\n      children: [\"\\uB204\\uAD70\\uAC00 \\uB2F9\\uC2E0\\uC758 \\uC774\\uC57C\\uAE30 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"myNotification-title\",\n        children: shortTitle()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), \"\\uC744(\\uB97C) \\uC88B\\uC544\\uD569\\uB2C8\\uB2E4\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(MyNotification, \"aMcIHhQAiUJTu1nS9ChXLMFOMJk=\", false, function () {\n  return [useNavigate];\n});\n_c = MyNotification;\nexport default MyNotification;\nvar _c;\n$RefreshReg$(_c, \"MyNotification\");","map":{"version":3,"names":["React","useRef","useState","useNavigate","smallEmojiArr","toMessageDetail","MyNotification","item","index","deleteEach","dragFlag","ref","navigate","deleted","setDeleted","isGrabbing","setIsGrabbing","postId","title","emojiNo","type","toDetail","shortTitle","length","slice","handleDragStart","e","current","img","Image","dataTransfer","setDragImage","effectAllowed","originPosTemp","x","offsetLeft","y","offsetTop","handleDragOver","preventDefault","style","marginLeft","clientX","handleDragEnd","dropEffect","offsetWidth","console","log","undefined","handleTouchStart","handleTouchMove","changedTouches","handleTouchEnd","dynamicClass","result"],"sources":["C:/Users/Administrator/Desktop/S07P31C209/frontend/src/components/individual/MyNotification.tsx"],"sourcesContent":["// ** 각 알림당 설정\r\nimport React, {useRef, useState} from 'react';\r\nimport {useNavigate} from 'react-router';\r\n\r\nimport '@individual/MyNotification.scss';\r\nimport {item} from '@individual/notification';\r\nimport {smallEmojiArr} from '@emojis/index';\r\nimport {toMessageDetail} from '@apis/router';\r\n\r\ninterface itemProps {\r\n  item: item;\r\n  dragFlag: boolean;\r\n  index?: number;\r\n  deleteEach?: (index: number) => void;\r\n}\r\n\r\nfunction MyNotification({item, index, deleteEach, dragFlag}: itemProps) {\r\n  const ref = useRef<HTMLDivElement>(null!);\r\n  const navigate = useNavigate();\r\n  // const [originPos, setOriginPos] = useState({x: 0, y: 0});\r\n  const [deleted, setDeleted] = useState(false);\r\n  const [isGrabbing, setIsGrabbing] = useState(false);\r\n  const {postId, title, emojiNo, type} = item;\r\n  const toDetail = (postId: number) => {\r\n    return () => navigate(toMessageDetail(postId, type));\r\n  };\r\n  const shortTitle = () => {\r\n    if (title.length > 6) {\r\n      return `${title.slice(0, 6)}...`;\r\n    } else {\r\n      return title;\r\n    }\r\n  };\r\n\r\n  const handleDragStart = (e: React.DragEvent<HTMLDivElement>) => {\r\n    if (dragFlag) {\r\n      const {current} = ref;\r\n      const img = new Image();\r\n      e.dataTransfer?.setDragImage(img, 0, 0);\r\n      e.dataTransfer.effectAllowed = 'move';\r\n      const originPosTemp = {x: current.offsetLeft, y: current.offsetTop};\r\n      // setOriginPos(() => originPosTemp);\r\n      setIsGrabbing(true);\r\n    }\r\n  };\r\n  const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\r\n    if (dragFlag) {\r\n      e.preventDefault();\r\n      (ref.current as HTMLDivElement as HTMLDivElement).style.marginLeft = `${\r\n        e.clientX * 0.4\r\n      }px`;\r\n    }\r\n  };\r\n  const handleDragEnd = (e: React.DragEvent<HTMLDivElement>) => {\r\n    if (dragFlag) {\r\n      e.preventDefault();\r\n      setIsGrabbing(false);\r\n      e.dataTransfer.dropEffect = 'move';\r\n      const {current} = ref;\r\n      if ((current.offsetLeft + current.offsetWidth) / 2 < e.clientX * 0.4) {\r\n        setDeleted(true);\r\n        console.log(true);\r\n        if (deleteEach && index !== undefined) {\r\n          deleteEach(index);\r\n        }\r\n      } else {\r\n        (ref.current as HTMLDivElement).style.marginLeft = `0`;\r\n        setDeleted(false);\r\n      }\r\n    }\r\n  };\r\n  const handleTouchStart = (e: React.TouchEvent<HTMLDivElement>) => {\r\n    if (dragFlag) {\r\n      const {current} = ref;\r\n      const originPosTemp = {x: current.offsetLeft, y: current.offsetTop};\r\n      // setOriginPos(() => originPosTemp);\r\n      setIsGrabbing(true);\r\n    }\r\n  };\r\n  const handleTouchMove = (e: React.TouchEvent<HTMLDivElement>) => {\r\n    if (dragFlag) {\r\n      (\r\n        ref.current as HTMLDivElement\r\n      ).style.marginLeft = `${e.changedTouches[0].clientX}px`;\r\n    }\r\n  };\r\n  const handleTouchEnd = (e: React.TouchEvent<HTMLDivElement>) => {\r\n    e.preventDefault();\r\n    if (dragFlag) {\r\n      setIsGrabbing(false);\r\n      const {current} = ref;\r\n      if (\r\n        (current.offsetLeft + current.offsetWidth) / 2 <\r\n        e.changedTouches[0].clientX\r\n      ) {\r\n        setDeleted(true);\r\n        if (deleteEach && index) {\r\n          deleteEach(index);\r\n        }\r\n      } else {\r\n        (ref.current as HTMLDivElement).style.marginLeft = '0';\r\n        setDeleted(false);\r\n      }\r\n    }\r\n  };\r\n  const dynamicClass = () => {\r\n    let result = 'myMessage';\r\n    if (isGrabbing) {\r\n      result += ' grabbed';\r\n    }\r\n    if (deleted) {\r\n      result += ' deleted';\r\n    }\r\n    return result;\r\n  };\r\n  // useEffect(() => {\r\n  //   dynamicClass();\r\n  // }, [isGrabbing, deleted]);\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={dynamicClass()}\r\n      draggable={dragFlag}\r\n      onClick={toDetail(postId)}\r\n      onDragStart={handleDragStart}\r\n      onDragOver={handleDragOver}\r\n      onDragEnd={handleDragEnd}\r\n      onTouchStart={handleTouchStart}\r\n      onTouchMove={handleTouchMove}\r\n      onTouchEnd={handleTouchEnd}>\r\n      <img\r\n        src={smallEmojiArr[emojiNo]}\r\n        alt=\"emoji\"\r\n        className=\"myNotification-emoji\"\r\n      />\r\n      <p className=\"myNotification-message\">\r\n        누군가 당신의 이야기 <br />\r\n        <span className=\"myNotification-title\">{shortTitle()}</span>을(를)\r\n        좋아합니다\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyNotification;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}