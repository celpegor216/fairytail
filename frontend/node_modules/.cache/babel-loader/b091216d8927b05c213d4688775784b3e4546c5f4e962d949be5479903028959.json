{"ast":null,"code":"import _objectSpread from\"C:/Users/Administrator/Desktop/S07P31C209/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useRef,Suspense}from'react';import{useFrame}from'@react-three/fiber';import{useTexture,OrbitControls}from'@react-three/drei';import earthMap from'../../assets/images/earthmap.jpg';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export function Earth(props){var mapImg=useTexture(earthMap);var mesh=useRef(null);// const [width, height] = [window.innerWidth, window.innerHeight];\n// const maxDistance = () => Math.max(Math.min(width, height) / 50, 25);\n// const minDistance = () => Math.min(maxDistance() / 2, 9);\nuseFrame(function(state,delta){return mesh.current.rotation.y+=0.007;});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(OrbitControls,{minPolarAngle:Math.PI/4-0.14,maxPolarAngle:Math.PI-0.78// maxDistance={maxDistance()}\n// minDistance={minDistance()}\n,maxDistance:22,minDistance:10}),/*#__PURE__*/_jsx(Suspense,{fallback:null,children:/*#__PURE__*/_jsxs(\"mesh\",_objectSpread(_objectSpread({ref:mesh,scale:3},props),{},{children:[/*#__PURE__*/_jsx(\"meshStandardMaterial\",{map:mapImg,transparent:true}),/*#__PURE__*/_jsx(\"sphereGeometry\",{})]}))})]});}","map":{"version":3,"names":["useRef","Suspense","useFrame","useTexture","OrbitControls","earthMap","Earth","props","mapImg","mesh","state","delta","current","rotation","y","Math","PI"],"sources":["C:/Users/Administrator/Desktop/S07P31C209/frontend/src/components/globe/Sphere.tsx"],"sourcesContent":["import {useRef, Suspense} from 'react';\r\nimport {useFrame} from '@react-three/fiber';\r\nimport {Mesh} from 'three';\r\nimport {useTexture, OrbitControls} from '@react-three/drei';\r\nimport earthMap from '../../assets/images/earthmap.jpg';\r\n\r\nexport function Earth(props: JSX.IntrinsicElements['mesh']) {\r\n  const mapImg = useTexture(earthMap);\r\n  const mesh = useRef<Mesh>(null!);\r\n  // const [width, height] = [window.innerWidth, window.innerHeight];\r\n  // const maxDistance = () => Math.max(Math.min(width, height) / 50, 25);\r\n  // const minDistance = () => Math.min(maxDistance() / 2, 9);\r\n  useFrame((state, delta) => (mesh.current.rotation.y += 0.007));\r\n  return (\r\n    <>\r\n      <OrbitControls\r\n        minPolarAngle={Math.PI / 4 - 0.14}\r\n        maxPolarAngle={Math.PI - 0.78}\r\n        // maxDistance={maxDistance()}\r\n        // minDistance={minDistance()}\r\n        maxDistance={22}\r\n        minDistance={10}\r\n      />\r\n      <Suspense fallback={null}>\r\n        <mesh ref={mesh} scale={3} {...props}>\r\n          <meshStandardMaterial map={mapImg} transparent />\r\n          <sphereGeometry />\r\n        </mesh>\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"uIAAA,OAAQA,MAAM,CAAEC,QAAQ,KAAO,OAAO,CACtC,OAAQC,QAAQ,KAAO,oBAAoB,CAE3C,OAAQC,UAAU,CAAEC,aAAa,KAAO,mBAAmB,CAC3D,MAAOC,SAAQ,KAAM,kCAAkC,CAAC,6IAExD,MAAO,SAASC,MAAK,CAACC,KAAoC,CAAE,CAC1D,GAAMC,OAAM,CAAGL,UAAU,CAACE,QAAQ,CAAC,CACnC,GAAMI,KAAI,CAAGT,MAAM,CAAO,IAAI,CAAE,CAChC;AACA;AACA;AACAE,QAAQ,CAAC,SAACQ,KAAK,CAAEC,KAAK,QAAMF,KAAI,CAACG,OAAO,CAACC,QAAQ,CAACC,CAAC,EAAI,KAAK,EAAC,CAAC,CAC9D,mBACE,wCACE,KAAC,aAAa,EACZ,aAAa,CAAEC,IAAI,CAACC,EAAE,CAAG,CAAC,CAAG,IAAK,CAClC,aAAa,CAAED,IAAI,CAACC,EAAE,CAAG,IACzB;AACA;AAAA,CACA,WAAW,CAAE,EAAG,CAChB,WAAW,CAAE,EAAG,EAChB,cACF,KAAC,QAAQ,EAAC,QAAQ,CAAE,IAAK,uBACvB,0CAAM,GAAG,CAAEP,IAAK,CAAC,KAAK,CAAE,CAAE,EAAKF,KAAK,6BAClC,6BAAsB,GAAG,CAAEC,MAAO,CAAC,WAAW,OAAG,cACjD,yBAAkB,IACb,EACE,GACV,CAEP"},"metadata":{},"sourceType":"module","externalDependencies":[]}