{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\S07P31C209\\\\frontend\\\\src\\\\components\\\\individual\\\\EachBgm.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useState } from 'react';\nimport { ReactComponent as Play } from '@images/play.svg';\nimport { ReactComponent as Pause } from '@images/pause.svg';\nimport { returnFalse } from '@common/commonFunc';\nimport '@individual/SettingsModal.scss';\nimport { useRecoilState } from 'recoil';\nimport { playingState } from '@apis/Recoil';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EachBgm(_ref) {\n  _s();\n  let {\n    element,\n    index,\n    newBgm,\n    changeBgm\n  } = _ref;\n  const [onBgmPlay, setOnBgmPlay] = useRecoilState(playingState);\n  const changeOnPlay = () => {\n    setOnBgmPlay(false);\n    console.log(onPlay);\n  };\n  const audioRef = useRef(null);\n  const {\n    title,\n    bgm\n  } = element;\n  const [onPlay, setOnPlay] = useState(false);\n  const playBgm = () => {\n    setOnBgmPlay(returnFalse);\n    if (onPlay) {\n      audioRef.current && audioRef.current.play();\n    } else {\n      audioRef.current && audioRef.current.pause();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: title === newBgm ? 'bgm-item bgm-selected' : 'bgm-item',\n    onClick: changeBgm(index),\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"bgm-modal-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      src: bgm,\n      loop: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), onPlay ? /*#__PURE__*/_jsxDEV(Pause, {\n      className: \"bgm-play\",\n      fill: \"black\",\n      onClick: playBgm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Play, {\n      className: \"bgm-play\",\n      fill: \"black\",\n      onClick: playBgm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, title, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(EachBgm, \"OF8+upma+QUMH8mewofxOt45QDE=\", false, function () {\n  return [useRecoilState];\n});\n_c = EachBgm;\nexport default EachBgm;\nvar _c;\n$RefreshReg$(_c, \"EachBgm\");","map":{"version":3,"names":["useRef","useState","ReactComponent","Play","Pause","returnFalse","useRecoilState","playingState","EachBgm","element","index","newBgm","changeBgm","onBgmPlay","setOnBgmPlay","changeOnPlay","console","log","onPlay","audioRef","title","bgm","setOnPlay","playBgm","current","play","pause"],"sources":["C:/Users/Administrator/Desktop/S07P31C209/frontend/src/components/individual/EachBgm.tsx"],"sourcesContent":["import {useRef, useState} from 'react';\r\nimport {ReactComponent as Play} from '@images/play.svg';\r\nimport {ReactComponent as Pause} from '@images/pause.svg';\r\nimport {returnTrue, returnFalse} from '@common/commonFunc';\r\nimport '@individual/SettingsModal.scss';\r\nimport {useRecoilState} from 'recoil';\r\nimport {playingState} from '@apis/Recoil';\r\n\r\ninterface EachBgmProps {\r\n  element: {title: string; bgm: string};\r\n  index: number;\r\n  newBgm: string;\r\n  changeBgm: (index: number) => () => void;\r\n}\r\n\r\nfunction EachBgm({element, index, newBgm, changeBgm}: EachBgmProps) {\r\n  const [onBgmPlay, setOnBgmPlay] = useRecoilState(playingState);\r\n  const changeOnPlay = () => {\r\n    setOnBgmPlay(false);\r\n    console.log(onPlay);\r\n  };\r\n  const audioRef = useRef<HTMLAudioElement>(null);\r\n  const {title, bgm} = element;\r\n  const [onPlay, setOnPlay] = useState(false);\r\n  const playBgm = () => {\r\n    setOnBgmPlay(returnFalse);\r\n    if (onPlay) {\r\n      audioRef.current && audioRef.current.play();\r\n    } else {\r\n      audioRef.current && audioRef.current.pause();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      key={title}\r\n      className={title === newBgm ? 'bgm-item bgm-selected' : 'bgm-item'}\r\n      onClick={changeBgm(index)}>\r\n      <span className=\"bgm-modal-title\">{title}</span>\r\n\r\n      <audio ref={audioRef} src={bgm} loop />\r\n      {onPlay ? (\r\n        <Pause className=\"bgm-play\" fill=\"black\" onClick={playBgm} />\r\n      ) : (\r\n        <Play className=\"bgm-play\" fill=\"black\" onClick={playBgm} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EachBgm;\r\n"],"mappings":";;AAAA,SAAQA,MAAM,EAAEC,QAAQ,QAAO,OAAO;AACtC,SAAQC,cAAc,IAAIC,IAAI,QAAO,kBAAkB;AACvD,SAAQD,cAAc,IAAIE,KAAK,QAAO,mBAAmB;AACzD,SAAoBC,WAAW,QAAO,oBAAoB;AAC1D,OAAO,gCAAgC;AACvC,SAAQC,cAAc,QAAO,QAAQ;AACrC,SAAQC,YAAY,QAAO,cAAc;AAAC;AAS1C,SAASC,OAAO,OAAoD;EAAA;EAAA,IAAnD;IAACC,OAAO;IAAEC,KAAK;IAAEC,MAAM;IAAEC;EAAuB,CAAC;EAChE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,cAAc,CAACC,YAAY,CAAC;EAC9D,MAAMQ,YAAY,GAAG,MAAM;IACzBD,YAAY,CAAC,KAAK,CAAC;IACnBE,OAAO,CAACC,GAAG,CAACC,MAAM,CAAC;EACrB,CAAC;EACD,MAAMC,QAAQ,GAAGnB,MAAM,CAAmB,IAAI,CAAC;EAC/C,MAAM;IAACoB,KAAK;IAAEC;EAAG,CAAC,GAAGZ,OAAO;EAC5B,MAAM,CAACS,MAAM,EAAEI,SAAS,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMsB,OAAO,GAAG,MAAM;IACpBT,YAAY,CAACT,WAAW,CAAC;IACzB,IAAIa,MAAM,EAAE;MACVC,QAAQ,CAACK,OAAO,IAAIL,QAAQ,CAACK,OAAO,CAACC,IAAI,EAAE;IAC7C,CAAC,MAAM;MACLN,QAAQ,CAACK,OAAO,IAAIL,QAAQ,CAACK,OAAO,CAACE,KAAK,EAAE;IAC9C;EACF,CAAC;EAED,oBACE;IAEE,SAAS,EAAEN,KAAK,KAAKT,MAAM,GAAG,uBAAuB,GAAG,UAAW;IACnE,OAAO,EAAEC,SAAS,CAACF,KAAK,CAAE;IAAA,wBAC1B;MAAM,SAAS,EAAC,iBAAiB;MAAA,UAAEU;IAAK;MAAA;MAAA;MAAA;IAAA,QAAQ,eAEhD;MAAO,GAAG,EAAED,QAAS;MAAC,GAAG,EAAEE,GAAI;MAAC,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAG,EACtCH,MAAM,gBACL,QAAC,KAAK;MAAC,SAAS,EAAC,UAAU;MAAC,IAAI,EAAC,OAAO;MAAC,OAAO,EAAEK;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,gBAE7D,QAAC,IAAI;MAAC,SAAS,EAAC,UAAU;MAAC,IAAI,EAAC,OAAO;MAAC,OAAO,EAAEA;IAAQ;MAAA;MAAA;MAAA;IAAA,QAC1D;EAAA,GAVIH,KAAK;IAAA;IAAA;IAAA;EAAA,QAWN;AAEV;AAAC,GAjCQZ,OAAO;EAAA,QACoBF,cAAc;AAAA;AAAA,KADzCE,OAAO;AAmChB,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}