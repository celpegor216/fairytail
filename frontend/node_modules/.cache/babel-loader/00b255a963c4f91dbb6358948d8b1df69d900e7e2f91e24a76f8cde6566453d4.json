{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\S07P31C209\\\\frontend\\\\src\\\\components\\\\globe\\\\Sphere.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, Suspense } from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { useTexture, OrbitControls } from '@react-three/drei';\nimport earthMap from '../../assets/images/earthmap.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Earth(props) {\n  _s();\n  const mapImg = useTexture(earthMap);\n  const mesh = useRef(null);\n  // const [width, height] = [window.innerWidth, window.innerHeight];\n  // const maxDistance = () => Math.max(Math.min(width, height) / 50, 25);\n  // const minDistance = () => Math.min(maxDistance() / 2, 9);\n  useFrame((state, delta) => mesh.current.rotation.y += 0.007);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(OrbitControls, {\n      minPolarAngle: Math.PI / 4 - 0.14,\n      maxPolarAngle: Math.PI - 0.78\n      // maxDistance={maxDistance()}\n      // minDistance={minDistance()}\n      ,\n      maxDistance: 22,\n      minDistance: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: null,\n      children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n        ref: mesh,\n        scale: 3,\n        ...props,\n        children: [/*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n          map: mapImg,\n          transparent: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"sphereGeometry\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Earth, \"AG4UduuLJBmx1JoiVRw2y/nQQJI=\", false, function () {\n  return [useTexture, useFrame];\n});\n_c = Earth;\nvar _c;\n$RefreshReg$(_c, \"Earth\");","map":{"version":3,"names":["useRef","Suspense","useFrame","useTexture","OrbitControls","earthMap","Earth","props","mapImg","mesh","state","delta","current","rotation","y","Math","PI"],"sources":["C:/Users/Administrator/Desktop/S07P31C209/frontend/src/components/globe/Sphere.tsx"],"sourcesContent":["import {useRef, Suspense} from 'react';\r\nimport {useFrame} from '@react-three/fiber';\r\nimport {Mesh} from 'three';\r\nimport {useTexture, OrbitControls} from '@react-three/drei';\r\nimport earthMap from '../../assets/images/earthmap.jpg';\r\n\r\nexport function Earth(props: JSX.IntrinsicElements['mesh']) {\r\n  const mapImg = useTexture(earthMap);\r\n  const mesh = useRef<Mesh>(null!);\r\n  // const [width, height] = [window.innerWidth, window.innerHeight];\r\n  // const maxDistance = () => Math.max(Math.min(width, height) / 50, 25);\r\n  // const minDistance = () => Math.min(maxDistance() / 2, 9);\r\n  useFrame((state, delta) => (mesh.current.rotation.y += 0.007));\r\n  return (\r\n    <>\r\n      <OrbitControls\r\n        minPolarAngle={Math.PI / 4 - 0.14}\r\n        maxPolarAngle={Math.PI - 0.78}\r\n        // maxDistance={maxDistance()}\r\n        // minDistance={minDistance()}\r\n        maxDistance={22}\r\n        minDistance={10}\r\n      />\r\n      <Suspense fallback={null}>\r\n        <mesh ref={mesh} scale={3} {...props}>\r\n          <meshStandardMaterial map={mapImg} transparent />\r\n          <sphereGeometry />\r\n        </mesh>\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAAQA,MAAM,EAAEC,QAAQ,QAAO,OAAO;AACtC,SAAQC,QAAQ,QAAO,oBAAoB;AAE3C,SAAQC,UAAU,EAAEC,aAAa,QAAO,mBAAmB;AAC3D,OAAOC,QAAQ,MAAM,kCAAkC;AAAC;AAAA;AAExD,OAAO,SAASC,KAAK,CAACC,KAAoC,EAAE;EAAA;EAC1D,MAAMC,MAAM,GAAGL,UAAU,CAACE,QAAQ,CAAC;EACnC,MAAMI,IAAI,GAAGT,MAAM,CAAO,IAAI,CAAE;EAChC;EACA;EACA;EACAE,QAAQ,CAAC,CAACQ,KAAK,EAAEC,KAAK,KAAMF,IAAI,CAACG,OAAO,CAACC,QAAQ,CAACC,CAAC,IAAI,KAAM,CAAC;EAC9D,oBACE;IAAA,wBACE,QAAC,aAAa;MACZ,aAAa,EAAEC,IAAI,CAACC,EAAE,GAAG,CAAC,GAAG,IAAK;MAClC,aAAa,EAAED,IAAI,CAACC,EAAE,GAAG;MACzB;MACA;MAAA;MACA,WAAW,EAAE,EAAG;MAChB,WAAW,EAAE;IAAG;MAAA;MAAA;MAAA;IAAA,QAChB,eACF,QAAC,QAAQ;MAAC,QAAQ,EAAE,IAAK;MAAA,uBACvB;QAAM,GAAG,EAAEP,IAAK;QAAC,KAAK,EAAE,CAAE;QAAA,GAAKF,KAAK;QAAA,wBAClC;UAAsB,GAAG,EAAEC,MAAO;UAAC,WAAW;QAAA;UAAA;UAAA;UAAA;QAAA,QAAG,eACjD;UAAA;UAAA;UAAA;QAAA,QAAkB;MAAA;QAAA;QAAA;QAAA;MAAA;IACb;MAAA;MAAA;MAAA;IAAA,QACE;EAAA,gBACV;AAEP;AAAC,GAzBeF,KAAK;EAAA,QACJH,UAAU,EAKzBD,QAAQ;AAAA;AAAA,KANMI,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}