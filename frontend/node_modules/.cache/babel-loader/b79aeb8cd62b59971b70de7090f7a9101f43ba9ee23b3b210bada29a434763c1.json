{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\S07P31C209\\\\frontend\\\\src\\\\components\\\\messageCreate\\\\MusicPlayer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\nimport './MusicPlayer.scss';\nimport { ReactComponent as Play } from '@images/play.svg';\nimport { ReactComponent as Pause } from '@images/pause.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// audio 재생기\nfunction MusicPlayer(_ref) {\n  _s();\n  let {\n    fileURL\n  } = _ref;\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [audioInfo, setAudioInfo] = useState({\n    currentTime: 0,\n    duration: 0\n  });\n  const handleUpdateTime = e => {\n    const target = e.target;\n    if (target.localName === 'audio') {\n      const currentTime = target.currentTime;\n      const duration = target.duration;\n      setAudioInfo({\n        ...audioInfo,\n        currentTime,\n        duration\n      });\n    }\n  };\n  const handleChangeFile = e => {\n    handleUpdateTime(e);\n    setIsPlaying(false);\n  };\n  const handlePlay = () => {\n    if (isPlaying) {\n      audioRef.current && audioRef.current.pause();\n    } else {\n      audioRef.current && audioRef.current.play();\n    }\n    setIsPlaying(prev => !prev);\n  };\n  const handleDrag = e => {\n    if (audioRef.current) {\n      audioRef.current.currentTime = Number(e.target.value);\n    }\n    setAudioInfo({\n      ...audioInfo,\n      currentTime: Number(e.target.value)\n    });\n  };\n  const getTime = time => {\n    const minute = Math.floor(time / 60);\n    const second = ('0' + Math.floor(time % 60)).slice(-2);\n    return `${minute}:${second}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"music-player-container\",\n    children: [isPlaying ? /*#__PURE__*/_jsxDEV(Pause, {\n      width: \"70%\",\n      height: \"70%\",\n      fill: \"#b49aff\",\n      onClick: handlePlay,\n      className: \"play-btn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Play, {\n      width: \"70%\",\n      height: \"70%\",\n      fill: \"#b49aff\",\n      onClick: handlePlay,\n      className: \"play-btn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"track-input\",\n          onChange: handleDrag,\n          min: 0,\n          max: audioInfo.duration || 0,\n          value: audioInfo.currentTime,\n          type: \"range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AnimateTrack, {\n          audioInfo: audioInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: getTime(audioInfo.currentTime || 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: getTime(audioInfo.duration || 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      onLoadedMetadata: handleChangeFile,\n      onTimeUpdate: handleUpdateTime,\n      onEnded: handlePlay,\n      ref: audioRef,\n      src: fileURL\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(MusicPlayer, \"yuNIKmz8VU0vZTksoy3PVCWJQY4=\");\n_c = MusicPlayer;\nconst AnimateTrack = styled.div`\n  background: rgb(204, 204, 204);\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  transform: translateX(\n    ${_ref2 => {\n  let {\n    audioInfo\n  } = _ref2;\n  return Math.round(audioInfo.currentTime * 100 / audioInfo.duration) + '%';\n}}\n  );\n  pointer-events: none;\n`;\n_c2 = AnimateTrack;\nexport default MusicPlayer;\nvar _c, _c2;\n$RefreshReg$(_c, \"MusicPlayer\");\n$RefreshReg$(_c2, \"AnimateTrack\");","map":{"version":3,"names":["React","useState","useRef","styled","ReactComponent","Play","Pause","MusicPlayer","fileURL","audioRef","isPlaying","setIsPlaying","audioInfo","setAudioInfo","currentTime","duration","handleUpdateTime","e","target","localName","handleChangeFile","handlePlay","current","pause","play","prev","handleDrag","Number","value","getTime","time","minute","Math","floor","second","slice","AnimateTrack","div","round"],"sources":["C:/Users/Administrator/Desktop/S07P31C209/frontend/src/components/messageCreate/MusicPlayer.tsx"],"sourcesContent":["import React, {useState, useRef} from 'react';\r\nimport styled from 'styled-components';\r\nimport './MusicPlayer.scss';\r\nimport {ReactComponent as Play} from '@images/play.svg';\r\nimport {ReactComponent as Pause} from '@images/pause.svg';\r\n\r\ntype MusicPlayerProps = {\r\n  fileURL: string;\r\n};\r\n\r\ntype AudioInfo = {\r\n  currentTime: number;\r\n  duration: number;\r\n};\r\n\r\n// audio 재생기\r\nfunction MusicPlayer({fileURL}: MusicPlayerProps) {\r\n  const audioRef = useRef<HTMLAudioElement>(null);\r\n\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [audioInfo, setAudioInfo] = useState({\r\n    currentTime: 0,\r\n    duration: 0,\r\n  });\r\n\r\n  const handleUpdateTime = (\r\n    e: React.SyntheticEvent<HTMLAudioElement, Event>,\r\n  ) => {\r\n    const target = e.target as HTMLAudioElement;\r\n\r\n    if (target.localName === 'audio') {\r\n      const currentTime = target.currentTime;\r\n      const duration = target.duration;\r\n      setAudioInfo({...audioInfo, currentTime, duration});\r\n    }\r\n  };\r\n\r\n  const handleChangeFile = (\r\n    e: React.SyntheticEvent<HTMLAudioElement, Event>,\r\n  ) => {\r\n    handleUpdateTime(e);\r\n    setIsPlaying(false);\r\n  };\r\n\r\n  const handlePlay = () => {\r\n    if (isPlaying) {\r\n      audioRef.current && audioRef.current.pause();\r\n    } else {\r\n      audioRef.current && audioRef.current.play();\r\n    }\r\n    setIsPlaying(prev => !prev);\r\n  };\r\n\r\n  const handleDrag = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (audioRef.current) {\r\n      audioRef.current.currentTime = Number(e.target.value);\r\n    }\r\n    setAudioInfo({...audioInfo, currentTime: Number(e.target.value)});\r\n  };\r\n\r\n  const getTime = (time: number) => {\r\n    const minute = Math.floor(time / 60);\r\n    const second = ('0' + Math.floor(time % 60)).slice(-2);\r\n    return `${minute}:${second}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"music-player-container\">\r\n      {isPlaying ? (\r\n        <Pause\r\n          width=\"70%\"\r\n          height=\"70%\"\r\n          fill=\"#b49aff\"\r\n          onClick={handlePlay}\r\n          className=\"play-btn\"\r\n        />\r\n      ) : (\r\n        <Play\r\n          width=\"70%\"\r\n          height=\"70%\"\r\n          fill=\"#b49aff\"\r\n          onClick={handlePlay}\r\n          className=\"play-btn\"\r\n        />\r\n      )}\r\n\r\n      <div className=\"track-container\">\r\n        <div className=\"track\">\r\n          <input\r\n            className=\"track-input\"\r\n            onChange={handleDrag}\r\n            min={0}\r\n            max={audioInfo.duration || 0}\r\n            value={audioInfo.currentTime}\r\n            type=\"range\"\r\n          />\r\n          <AnimateTrack audioInfo={audioInfo} />\r\n        </div>\r\n\r\n        <div className=\"time-container\">\r\n          <span>{getTime(audioInfo.currentTime || 0)}</span>\r\n          <span>{getTime(audioInfo.duration || 0)}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <audio\r\n        onLoadedMetadata={handleChangeFile}\r\n        onTimeUpdate={handleUpdateTime}\r\n        onEnded={handlePlay}\r\n        ref={audioRef}\r\n        src={fileURL}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst AnimateTrack = styled.div`\r\n  background: rgb(204, 204, 204);\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  transform: translateX(\r\n    ${({audioInfo}: {audioInfo: AudioInfo}) =>\r\n      Math.round((audioInfo.currentTime * 100) / audioInfo.duration) + '%'}\r\n  );\r\n  pointer-events: none;\r\n`;\r\n\r\nexport default MusicPlayer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}