{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\S07P31C209\\\\frontend\\\\src\\\\screens\\\\MessageList.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '@screens/MessageList.scss';\nimport MyMessage from '@messageList/MyMessage';\nimport MoveToBack from '@common/MoveToBack';\nimport { main, notFound } from '@apis/router';\nimport { getMesssageList } from '@/apis/messageList';\nimport { currentUser } from '@/components/common/commonFunc';\nimport { ReactComponent as Filter } from '@images/filter.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageList() {\n  _s();\n  const navigate = useNavigate();\n  const [messageItems, setMessageItems] = useState([]);\n  const [filterState, setFilterState] = useState(true);\n\n  // 데이터 및 데이터 받아오기가 끝났는지 확인하기 위한 state\n  const [isFinished, setIsFinished] = useState(-1);\n  const [isSorted, setIsSorted] = useState(false);\n\n  // 0: text, 1: img, 2:video, 3:audio\n  const types = [0, 1, 2, 3];\n  const userId = currentUser();\n  useEffect(() => {\n    if (userId !== -1) {\n      types.forEach(type => {\n        getMesssageList(type, userId).then(res => {\n          setMessageItems(prev => prev.concat(res.data));\n          setIsFinished(prev => prev + 1);\n        }).catch(err => {\n          console.log(err);\n        });\n      });\n    } else {\n      navigate(notFound());\n    }\n  }, []);\n\n  // messageList 최신순으로 정렬\n  useEffect(() => {\n    if (isFinished === 3 && messageItems.length > 0) {\n      const copiedData = messageItems.slice();\n      if (filterState) {\n        const sortedData = copiedData.sort((a, b) => a.date < b.date ? 1 : a.date > b.date ? -1 : 0);\n        setMessageItems(() => sortedData);\n      } else {\n        const sortedData = copiedData.sort((a, b) => a.date < b.date ? -1 : a.date > b.date ? 1 : 0);\n        setMessageItems(() => sortedData);\n      }\n      setIsSorted(true);\n    }\n  }, [filterState, isFinished, messageItems]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messageList\",\n    children: [/*#__PURE__*/_jsxDEV(MoveToBack, {\n      path: main()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messageList-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messageList-container-info\",\n        children: \"\\uB0B4 \\uC774\\uC57C\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messageList-container-filter\",\n        onClick: () => setFilterState(prev => !prev),\n        children: /*#__PURE__*/_jsxDEV(Filter, {\n          fill: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messageList-container-list\",\n        children: [!isSorted ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messageList-container-list-empty\",\n          children: \"\\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824\\uC8FC\\uC138\\uC694...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this) : null, isSorted && messageItems.length > 0 ? messageItems.map(messageItem => {\n          return /*#__PURE__*/_jsxDEV(MyMessage, {\n            messageItem: messageItem\n          }, `${messageItem.type}+${messageItem.postId}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 19\n          }, this);\n        }) : null, isSorted && messageItems.length < 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"messageList-container-list-empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(MessageList, \"DmPsh+wvauRXQNMH8hsujJL5HE0=\", false, function () {\n  return [useNavigate];\n});\n_c = MessageList;\nexport default MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["useEffect","useState","useNavigate","MyMessage","MoveToBack","main","notFound","getMesssageList","currentUser","ReactComponent","Filter","MessageList","navigate","messageItems","setMessageItems","filterState","setFilterState","isFinished","setIsFinished","isSorted","setIsSorted","types","userId","forEach","type","then","res","prev","concat","data","catch","err","console","log","length","copiedData","slice","sortedData","sort","a","b","date","map","messageItem","postId"],"sources":["C:/Users/Administrator/Desktop/S07P31C209/frontend/src/screens/MessageList.tsx"],"sourcesContent":["import {useEffect, useState, useCallback} from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport '@screens/MessageList.scss';\r\nimport MyMessage from '@messageList/MyMessage';\r\nimport MoveToBack from '@common/MoveToBack';\r\nimport {main, notFound} from '@apis/router';\r\nimport {getMesssageList} from '@/apis/messageList';\r\nimport {currentUser} from '@/components/common/commonFunc';\r\nimport {ReactComponent as Filter} from '@images/filter.svg';\r\n\r\ninterface items {\r\n  postId: number;\r\n  date: string;\r\n  emojiNo: number;\r\n  likeCnt: number;\r\n  status: number;\r\n  title: string;\r\n  type: number;\r\n}\r\n\r\nfunction MessageList() {\r\n  const navigate = useNavigate();\r\n\r\n  const [messageItems, setMessageItems] = useState<items[]>([]);\r\n  const [filterState, setFilterState] = useState(true);\r\n\r\n  // 데이터 및 데이터 받아오기가 끝났는지 확인하기 위한 state\r\n  const [isFinished, setIsFinished] = useState(-1);\r\n  const [isSorted, setIsSorted] = useState(false);\r\n\r\n  // 0: text, 1: img, 2:video, 3:audio\r\n  const types = [0, 1, 2, 3];\r\n  const userId = currentUser();\r\n\r\n  useEffect(() => {\r\n    if (userId !== -1) {\r\n      types.forEach(type => {\r\n        getMesssageList(type, userId)\r\n          .then(res => {\r\n            setMessageItems(prev => prev.concat(res.data));\r\n            setIsFinished(prev => prev + 1);\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          });\r\n      });\r\n    } else {\r\n      navigate(notFound());\r\n    }\r\n  }, []);\r\n\r\n  // messageList 최신순으로 정렬\r\n  useEffect(() => {\r\n    if (isFinished === 3 && messageItems.length > 0) {\r\n      const copiedData = messageItems.slice();\r\n\r\n      if (filterState) {\r\n        const sortedData = copiedData.sort((a, b) =>\r\n          a.date < b.date ? 1 : a.date > b.date ? -1 : 0,\r\n        );\r\n\r\n        setMessageItems(() => sortedData);\r\n      } else {\r\n        const sortedData = copiedData.sort((a, b) =>\r\n          a.date < b.date ? -1 : a.date > b.date ? 1 : 0,\r\n        );\r\n\r\n        setMessageItems(() => sortedData);\r\n      }\r\n      setIsSorted(true);\r\n    }\r\n  }, [filterState, isFinished, messageItems]);\r\n\r\n  return (\r\n    <div className=\"messageList\">\r\n      <MoveToBack path={main()} />\r\n      <div className=\"messageList-container\">\r\n        <div className=\"messageList-container-info\">내 이야기</div>\r\n        <div\r\n          className=\"messageList-container-filter\"\r\n          onClick={() => setFilterState(prev => !prev)}>\r\n          <Filter fill=\"white\" />\r\n        </div>\r\n\r\n        <div className=\"messageList-container-list\">\r\n          {!isSorted ? (\r\n            <div className=\"messageList-container-list-empty\">\r\n              잠시만 기다려주세요...\r\n            </div>\r\n          ) : null}\r\n\r\n          {isSorted && messageItems.length > 0\r\n            ? messageItems.map(messageItem => {\r\n                return (\r\n                  <MyMessage\r\n                    key={`${messageItem.type}+${messageItem.postId}`}\r\n                    messageItem={messageItem}\r\n                  />\r\n                );\r\n              })\r\n            : null}\r\n\r\n          {isSorted && messageItems.length < 1 ? (\r\n            <div className=\"messageList-container-list-empty\"></div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}