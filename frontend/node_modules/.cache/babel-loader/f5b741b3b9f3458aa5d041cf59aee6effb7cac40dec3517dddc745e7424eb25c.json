{"ast":null,"code":"//** back과 통신\n\n// base url & headers\nimport { API_AUTH } from '@apis/index';\n// interface\n\n// text 정보 받아오기\n// export const getTextMesssage: messageType = async (type, postId) => {\n//   const res = await API_AUTH.get(`/${type}/message/detail/${postId}`);\n//   return res.data;\n// };\n\n// 상세 페이지 정보 받아오기\nexport const getMesssage = async (type, params) => {\n  const res = await API_AUTH.get(`/${type}/message/detail`, {\n    params\n  });\n  return res.data;\n};\n\n// 글 삭제\nexport const deleteMessage = async (type, postId) => {\n  const res = await API_AUTH.delete(`/${type}/message/${postId}`);\n  return res.data;\n};\n\n// 좋아요 여부 변경\n// data 타입만 다름\nexport const likeMessage = async (type, data) => {\n  const res = await API_AUTH.post(`/${type}/like`, data);\n  console.log(res.data);\n  return res.data;\n  // switch (type) {\n  //   case 'text':\n  //     const textRes = await API_AUTH.post(`/${type}/like`, data);\n  //     console.log(textRes.data)\n  //     return textRes.data;\n  //   default:\n  //     const res = await API_AUTH.post(`/${type}/like`, null, {params: data});\n  //     return res.data;\n  // }\n};\n\n// 공개 여부 변경\n// 이미지, 텍스트 데이터 다름\nexport const changeMessageStatus = async (type, data) => {\n  const res = await API_AUTH.post(`/${type}/message/status`, data);\n  return res.data;\n  // switch (type) {\n  //   case 'text':\n  //     const textRes = await API_AUTH.post(`/${type}/message/status`, data);\n  //     return textRes.data;\n  //   case 'img':\n  //     const imgRes = await API_AUTH.post(`/${type}/message/status`, null, {\n  //       params: data,\n  //     });\n  //     return imgRes.data;\n  // }\n};\n\n// 신고\nexport const reportMessage = async (type, data) => {\n  const res = await API_AUTH.post(`/${type}/report`, data);\n  return res.data;\n  // switch (type) {\n  //   case 'text':\n  //     const textRes = await API_AUTH.post(`/${type}/report`, data);\n  //     return textRes.data;\n  //   case 'img':\n  //     const imgRes = await API_AUTH.post(`/${type}/report`, null, {\n  //       params: data,\n  //     });\n  //     return imgRes.data;\n  // }\n};","map":{"version":3,"names":["API_AUTH","getMesssage","type","params","res","get","data","deleteMessage","postId","delete","likeMessage","post","console","log","changeMessageStatus","reportMessage"],"sources":["C:/Users/Administrator/Desktop/S07P31C209/frontend/src/apis/messageDetail/detailFunc.ts"],"sourcesContent":["//** back과 통신\r\n\r\n// base url & headers\r\nimport {API_AUTH} from '@apis/index';\r\n// interface\r\nimport {\r\n  messageType,\r\n  messageImgType,\r\n  likeMessageType,\r\n  changeMessageStatusType,\r\n  reportMessageType,\r\n} from '@apis/messageDetail/detailInterface';\r\n\r\n// text 정보 받아오기\r\n// export const getTextMesssage: messageType = async (type, postId) => {\r\n//   const res = await API_AUTH.get(`/${type}/message/detail/${postId}`);\r\n//   return res.data;\r\n// };\r\n\r\n// 상세 페이지 정보 받아오기\r\nexport const getMesssage: messageImgType = async (type, params) => {\r\n  const res = await API_AUTH.get(`/${type}/message/detail`, {params});\r\n  return res.data;\r\n};\r\n\r\n// 글 삭제\r\nexport const deleteMessage: messageType = async (type, postId) => {\r\n  const res = await API_AUTH.delete(`/${type}/message/${postId}`);\r\n  return res.data;\r\n};\r\n\r\n// 좋아요 여부 변경\r\n// data 타입만 다름\r\nexport const likeMessage: likeMessageType = async (type, data) => {\r\n  const res = await API_AUTH.post(`/${type}/like`, data);\r\n  console.log(res.data);\r\n  return res.data;\r\n  // switch (type) {\r\n  //   case 'text':\r\n  //     const textRes = await API_AUTH.post(`/${type}/like`, data);\r\n  //     console.log(textRes.data)\r\n  //     return textRes.data;\r\n  //   default:\r\n  //     const res = await API_AUTH.post(`/${type}/like`, null, {params: data});\r\n  //     return res.data;\r\n  // }\r\n};\r\n\r\n// 공개 여부 변경\r\n// 이미지, 텍스트 데이터 다름\r\nexport const changeMessageStatus: changeMessageStatusType = async (\r\n  type,\r\n  data,\r\n) => {\r\n  const res = await API_AUTH.post(`/${type}/message/status`, data);\r\n  return res.data;\r\n  // switch (type) {\r\n  //   case 'text':\r\n  //     const textRes = await API_AUTH.post(`/${type}/message/status`, data);\r\n  //     return textRes.data;\r\n  //   case 'img':\r\n  //     const imgRes = await API_AUTH.post(`/${type}/message/status`, null, {\r\n  //       params: data,\r\n  //     });\r\n  //     return imgRes.data;\r\n  // }\r\n};\r\n\r\n// 신고\r\nexport const reportMessage: reportMessageType = async (type, data) => {\r\n  const res = await API_AUTH.post(`/${type}/report`, data);\r\n  return res.data;\r\n  // switch (type) {\r\n  //   case 'text':\r\n  //     const textRes = await API_AUTH.post(`/${type}/report`, data);\r\n  //     return textRes.data;\r\n  //   case 'img':\r\n  //     const imgRes = await API_AUTH.post(`/${type}/report`, null, {\r\n  //       params: data,\r\n  //     });\r\n  //     return imgRes.data;\r\n  // }\r\n};\r\n"],"mappings":"AAAA;;AAEA;AACA,SAAQA,QAAQ,QAAO,aAAa;AACpC;;AASA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,MAAMC,WAA2B,GAAG,OAAOC,IAAI,EAAEC,MAAM,KAAK;EACjE,MAAMC,GAAG,GAAG,MAAMJ,QAAQ,CAACK,GAAG,CAAE,IAAGH,IAAK,iBAAgB,EAAE;IAACC;EAAM,CAAC,CAAC;EACnE,OAAOC,GAAG,CAACE,IAAI;AACjB,CAAC;;AAED;AACA,OAAO,MAAMC,aAA0B,GAAG,OAAOL,IAAI,EAAEM,MAAM,KAAK;EAChE,MAAMJ,GAAG,GAAG,MAAMJ,QAAQ,CAACS,MAAM,CAAE,IAAGP,IAAK,YAAWM,MAAO,EAAC,CAAC;EAC/D,OAAOJ,GAAG,CAACE,IAAI;AACjB,CAAC;;AAED;AACA;AACA,OAAO,MAAMI,WAA4B,GAAG,OAAOR,IAAI,EAAEI,IAAI,KAAK;EAChE,MAAMF,GAAG,GAAG,MAAMJ,QAAQ,CAACW,IAAI,CAAE,IAAGT,IAAK,OAAM,EAAEI,IAAI,CAAC;EACtDM,OAAO,CAACC,GAAG,CAACT,GAAG,CAACE,IAAI,CAAC;EACrB,OAAOF,GAAG,CAACE,IAAI;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;;AAED;AACA;AACA,OAAO,MAAMQ,mBAA4C,GAAG,OAC1DZ,IAAI,EACJI,IAAI,KACD;EACH,MAAMF,GAAG,GAAG,MAAMJ,QAAQ,CAACW,IAAI,CAAE,IAAGT,IAAK,iBAAgB,EAAEI,IAAI,CAAC;EAChE,OAAOF,GAAG,CAACE,IAAI;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;;AAED;AACA,OAAO,MAAMS,aAAgC,GAAG,OAAOb,IAAI,EAAEI,IAAI,KAAK;EACpE,MAAMF,GAAG,GAAG,MAAMJ,QAAQ,CAACW,IAAI,CAAE,IAAGT,IAAK,SAAQ,EAAEI,IAAI,CAAC;EACxD,OAAOF,GAAG,CAACE,IAAI;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}