{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\S07P31C209\\\\frontend\\\\src\\\\apis\\\\notifications\\\\foregroundMessaging.tsx\",\n  _s = $RefreshSig$();\n// ** 사용자가 서비스를 이용하고 있을 때 내부 알림 컴포넌트\n\nimport { getMessaging, onMessage } from 'firebase/messaging';\nimport { app } from '@apis/notifications/firebaseConfig';\nimport MyNotification from '@individual/MyNotification';\nimport { useEffect, useState } from 'react';\nimport { returnFalse, returnTrue } from '@common/commonFunc';\nimport '@common/Common.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction InitMessage() {\n  _s();\n  // fcm으로부터 데이터값 전달 받음\n  const messaging = getMessaging(app);\n\n  // 알림 창 관련 내용\n  const [info, setInfo] = useState();\n  const [open, setOpen] = useState(false);\n\n  // 알림이 뜨고 5초 후에 사라짐\n  const changeOpenState = () => {\n    if (open) {\n      setInterval(() => {\n        setOpen(returnFalse);\n      }, 5000);\n    }\n  };\n\n  // fcm에서 요청이 오면 info값 변경, localStorage에 값 저장\n  onMessage(messaging, payload => {\n    var _payload$data, _payload$data2;\n    if ((_payload$data = payload.data) !== null && _payload$data !== void 0 && _payload$data.body && (_payload$data2 = payload.data) !== null && _payload$data2 !== void 0 && _payload$data2.title) {\n      var _payload$data3, _payload$data4;\n      const body = JSON.parse((_payload$data3 = payload.data) === null || _payload$data3 === void 0 ? void 0 : _payload$data3.body);\n      const newInfo = {\n        userId: body === null || body === void 0 ? void 0 : body.userId,\n        postId: body === null || body === void 0 ? void 0 : body.postId,\n        emojiNo: body === null || body === void 0 ? void 0 : body.emojiNo,\n        type: body === null || body === void 0 ? void 0 : body.type,\n        title: (_payload$data4 = payload.data) === null || _payload$data4 === void 0 ? void 0 : _payload$data4.title\n      };\n      setInfo(() => newInfo);\n    }\n  });\n\n  // info 값 변경 시 알림 팝업 띄움\n  useEffect(() => {\n    if (info) {\n      setOpen(returnTrue);\n    }\n  }, [info]);\n  useEffect(changeOpenState, [open]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: open && info ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"foreground-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"foreground\",\n        children: /*#__PURE__*/_jsxDEV(MyNotification, {\n          item: info,\n          dragFlag: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n}\n_s(InitMessage, \"Quo3+x9XmrluXMFDV0Zp4d+5PDY=\");\n_c = InitMessage;\nexport default InitMessage;\nvar _c;\n$RefreshReg$(_c, \"InitMessage\");","map":{"version":3,"names":["getMessaging","onMessage","app","MyNotification","useEffect","useState","returnFalse","returnTrue","InitMessage","messaging","info","setInfo","open","setOpen","changeOpenState","setInterval","payload","data","body","title","JSON","parse","newInfo","userId","postId","emojiNo","type"],"sources":["C:/Users/Administrator/Desktop/S07P31C209/frontend/src/apis/notifications/foregroundMessaging.tsx"],"sourcesContent":["// ** 사용자가 서비스를 이용하고 있을 때 내부 알림 컴포넌트\r\n\r\nimport {getMessaging, onMessage} from 'firebase/messaging';\r\nimport {app} from '@apis/notifications/firebaseConfig';\r\nimport MyNotification from '@individual/MyNotification';\r\nimport {useEffect, useState} from 'react';\r\nimport {returnFalse, returnTrue} from '@common/commonFunc';\r\nimport {item} from '@individual/notification';\r\nimport '@common/Common.scss';\r\n\r\nfunction InitMessage() {\r\n  // fcm으로부터 데이터값 전달 받음\r\n  const messaging = getMessaging(app);\r\n\r\n  // 알림 창 관련 내용\r\n  const [info, setInfo] = useState<item>();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  // 알림이 뜨고 5초 후에 사라짐\r\n  const changeOpenState = () => {\r\n    if (open) {\r\n      setInterval(() => {\r\n        setOpen(returnFalse);\r\n      }, 5000);\r\n    }\r\n  };\r\n\r\n  // fcm에서 요청이 오면 info값 변경, localStorage에 값 저장\r\n  onMessage(messaging, payload => {\r\n    if (payload.data?.body && payload.data?.title) {\r\n      const body = JSON.parse(payload.data?.body);\r\n      const newInfo = {\r\n        userId: body?.userId,\r\n        postId: body?.postId,\r\n        emojiNo: body?.emojiNo,\r\n        type: body?.type,\r\n        title: payload.data?.title,\r\n      };\r\n      setInfo(() => newInfo);\r\n    }\r\n  });\r\n\r\n  // info 값 변경 시 알림 팝업 띄움\r\n  useEffect(() => {\r\n    if (info) {\r\n      setOpen(returnTrue);\r\n    }\r\n  }, [info]);\r\n\r\n  useEffect(changeOpenState, [open]);\r\n\r\n  return (\r\n    <>\r\n      {open && info ? (\r\n        <div className=\"foreground-container\">\r\n          <div id=\"foreground\">\r\n            <MyNotification item={info} dragFlag={false} />\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InitMessage;\r\n"],"mappings":";;AAAA;;AAEA,SAAQA,YAAY,EAAEC,SAAS,QAAO,oBAAoB;AAC1D,SAAQC,GAAG,QAAO,oCAAoC;AACtD,OAAOC,cAAc,MAAM,4BAA4B;AACvD,SAAQC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,SAAQC,WAAW,EAAEC,UAAU,QAAO,oBAAoB;AAE1D,OAAO,qBAAqB;AAAC;AAAA;AAE7B,SAASC,WAAW,GAAG;EAAA;EACrB;EACA,MAAMC,SAAS,GAAGT,YAAY,CAACE,GAAG,CAAC;;EAEnC;EACA,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,EAAQ;EACxC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;;EAEvC;EACA,MAAMS,eAAe,GAAG,MAAM;IAC5B,IAAIF,IAAI,EAAE;MACRG,WAAW,CAAC,MAAM;QAChBF,OAAO,CAACP,WAAW,CAAC;MACtB,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;;EAED;EACAL,SAAS,CAACQ,SAAS,EAAEO,OAAO,IAAI;IAAA;IAC9B,IAAI,iBAAAA,OAAO,CAACC,IAAI,0CAAZ,cAAcC,IAAI,sBAAIF,OAAO,CAACC,IAAI,2CAAZ,eAAcE,KAAK,EAAE;MAAA;MAC7C,MAAMD,IAAI,GAAGE,IAAI,CAACC,KAAK,mBAACL,OAAO,CAACC,IAAI,mDAAZ,eAAcC,IAAI,CAAC;MAC3C,MAAMI,OAAO,GAAG;QACdC,MAAM,EAAEL,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEK,MAAM;QACpBC,MAAM,EAAEN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEM,MAAM;QACpBC,OAAO,EAAEP,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,OAAO;QACtBC,IAAI,EAAER,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEQ,IAAI;QAChBP,KAAK,oBAAEH,OAAO,CAACC,IAAI,mDAAZ,eAAcE;MACvB,CAAC;MACDR,OAAO,CAAC,MAAMW,OAAO,CAAC;IACxB;EACF,CAAC,CAAC;;EAEF;EACAlB,SAAS,CAAC,MAAM;IACd,IAAIM,IAAI,EAAE;MACRG,OAAO,CAACN,UAAU,CAAC;IACrB;EACF,CAAC,EAAE,CAACG,IAAI,CAAC,CAAC;EAEVN,SAAS,CAACU,eAAe,EAAE,CAACF,IAAI,CAAC,CAAC;EAElC,oBACE;IAAA,UACGA,IAAI,IAAIF,IAAI,gBACX;MAAK,SAAS,EAAC,sBAAsB;MAAA,uBACnC;QAAK,EAAE,EAAC,YAAY;QAAA,uBAClB,QAAC,cAAc;UAAC,IAAI,EAAEA,IAAK;UAAC,QAAQ,EAAE;QAAM;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA;IAC3C;MAAA;MAAA;MAAA;IAAA,QACF,GACJ;EAAI,iBACP;AAEP;AAAC,GApDQF,WAAW;AAAA,KAAXA,WAAW;AAsDpB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}