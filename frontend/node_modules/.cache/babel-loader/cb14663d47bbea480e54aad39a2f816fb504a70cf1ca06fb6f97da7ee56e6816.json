{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\S07P31C209\\\\frontend\\\\src\\\\components\\\\individual\\\\MyNotification.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { emojiArr } from 'src/assets/emojis';\nimport '@individual/MyNotifications.scss';\nimport { useNavigate } from 'react-router';\nimport { toMessageDetail } from '@apis/router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MyNotification(_ref) {\n  _s();\n  let {\n    item,\n    index,\n    deleteEach\n  } = _ref;\n  const ref = useRef(null);\n  const navigate = useNavigate();\n  // const [originPos, setOriginPos] = useState({x: 0, y: 0});\n  const [deleted, setDeleted] = useState(false);\n  const [isGrabbing, setIsGrabbing] = useState(false);\n  const {\n    id,\n    title,\n    emoji\n  } = item;\n  const toDetail = postId => {\n    return () => navigate(toMessageDetail(postId));\n  };\n  const shortTitle = () => {\n    if (title.length >= 6) {\n      return `${title.slice(0, 6)}...`;\n    } else {\n      return title;\n    }\n  };\n  const handleDragStart = e => {\n    var _e$dataTransfer;\n    const {\n      current\n    } = ref;\n    const img = new Image();\n    (_e$dataTransfer = e.dataTransfer) === null || _e$dataTransfer === void 0 ? void 0 : _e$dataTransfer.setDragImage(img, 0, 0);\n    e.dataTransfer.effectAllowed = 'move';\n    const originPosTemp = {\n      x: current.offsetLeft,\n      y: current.offsetTop\n    };\n    // setOriginPos(() => originPosTemp);\n    setIsGrabbing(true);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    ref.current.style.marginLeft = `${e.clientX * 0.4}px`;\n  };\n  const handleDragEnd = e => {\n    e.preventDefault();\n    setIsGrabbing(false);\n    e.dataTransfer.dropEffect = 'move';\n    const {\n      current\n    } = ref;\n    if ((current.offsetLeft + current.offsetWidth) / 2 < e.clientX * 0.4) {\n      setDeleted(true);\n      console.log(true);\n      if (deleteEach && index) {\n        deleteEach(index);\n      }\n    } else {\n      ref.current.style.marginLeft = `0`;\n      setDeleted(false);\n      console.log(false);\n    }\n  };\n  const handleTouchStart = e => {\n    const {\n      current\n    } = ref;\n    const originPosTemp = {\n      x: current.offsetLeft,\n      y: current.offsetTop\n    };\n    // setOriginPos(() => originPosTemp);\n    setIsGrabbing(true);\n  };\n  const handleTouchMove = e => {\n    ref.current.style.marginLeft = `${e.changedTouches[0].clientX}px`;\n  };\n  const handleTouchEnd = e => {\n    e.preventDefault();\n    setIsGrabbing(false);\n    const {\n      current\n    } = ref;\n    if ((current.offsetLeft + current.offsetWidth) / 2 < e.changedTouches[0].clientX) {\n      setDeleted(true);\n      if (deleteEach && index) {\n        deleteEach(index);\n      }\n    } else {\n      ref.current.style.marginLeft = '0';\n      setDeleted(false);\n    }\n  };\n  const dynamicClass = () => {\n    let result = 'myNotification';\n    if (isGrabbing) {\n      result += ' grabbed';\n    }\n    if (deleted) {\n      result += ' deleted';\n    }\n    return result;\n  };\n  // useEffect(() => {\n  //   dynamicClass();\n  // }, [isGrabbing, deleted]);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      className: dynamicClass(),\n      draggable: true,\n      onClick: toDetail(id),\n      onDragStart: handleDragStart,\n      onDragOver: handleDragOver,\n      onDragEnd: handleDragEnd,\n      onTouchStart: handleTouchStart,\n      onTouchMove: handleTouchMove,\n      onTouchEnd: handleTouchEnd,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: emojiArr[emoji],\n        alt: \"emoji\",\n        className: \"myNotification-emoji\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC775\\uBA85\\uC758 \\uC791\\uAC00\\uAC00 \\uB2F9\\uC2E0\\uC758 \\uC774\\uC57C\\uAE30 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"myNotification-title\",\n          children: shortTitle()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), \"\\uC744 \\uC88B\\uC544\\uD569\\uB2C8\\uB2E4\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(MyNotification, \"aMcIHhQAiUJTu1nS9ChXLMFOMJk=\", false, function () {\n  return [useNavigate];\n});\n_c = MyNotification;\nexport default MyNotification;\nvar _c;\n$RefreshReg$(_c, \"MyNotification\");","map":{"version":3,"names":["React","useRef","useState","emojiArr","useNavigate","toMessageDetail","MyNotification","item","index","deleteEach","ref","navigate","deleted","setDeleted","isGrabbing","setIsGrabbing","id","title","emoji","toDetail","postId","shortTitle","length","slice","handleDragStart","e","current","img","Image","dataTransfer","setDragImage","effectAllowed","originPosTemp","x","offsetLeft","y","offsetTop","handleDragOver","preventDefault","style","marginLeft","clientX","handleDragEnd","dropEffect","offsetWidth","console","log","handleTouchStart","handleTouchMove","changedTouches","handleTouchEnd","dynamicClass","result"],"sources":["C:/Users/Administrator/Desktop/S07P31C209/frontend/src/components/individual/MyNotification.tsx"],"sourcesContent":["import React, {useRef, useState} from 'react';\r\nimport {emojiArr} from 'src/assets/emojis';\r\nimport '@individual/MyNotifications.scss';\r\nimport {useNavigate} from 'react-router';\r\nimport {toMessageDetail} from '@apis/router';\r\n\r\ninterface itemProps {\r\n  item: {\r\n    id: number;\r\n    title: string;\r\n    emoji: number;\r\n  };\r\n  index?: number;\r\n  deleteEach?: (index: number) => void;\r\n}\r\n\r\nfunction MyNotification({item, index, deleteEach}: itemProps) {\r\n  const ref = useRef<HTMLDivElement>(null!);\r\n  const navigate = useNavigate();\r\n  // const [originPos, setOriginPos] = useState({x: 0, y: 0});\r\n  const [deleted, setDeleted] = useState(false);\r\n  const [isGrabbing, setIsGrabbing] = useState(false);\r\n  const {id, title, emoji} = item;\r\n  const toDetail = (postId: number) => {\r\n    return () => navigate(toMessageDetail(postId));\r\n  };\r\n  const shortTitle = () => {\r\n    if (title.length >= 6) {\r\n      return `${title.slice(0, 6)}...`;\r\n    } else {\r\n      return title;\r\n    }\r\n  };\r\n\r\n  const handleDragStart = (e: React.DragEvent<HTMLDivElement>) => {\r\n    const {current} = ref;\r\n    const img = new Image();\r\n    e.dataTransfer?.setDragImage(img, 0, 0);\r\n    e.dataTransfer.effectAllowed = 'move';\r\n    const originPosTemp = {x: current.offsetLeft, y: current.offsetTop};\r\n    // setOriginPos(() => originPosTemp);\r\n    setIsGrabbing(true);\r\n  };\r\n  const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\r\n    e.preventDefault();\r\n    (ref.current as HTMLDivElement as HTMLDivElement).style.marginLeft = `${\r\n      e.clientX * 0.4\r\n    }px`;\r\n  };\r\n  const handleDragEnd = (e: React.DragEvent<HTMLDivElement>) => {\r\n    e.preventDefault();\r\n    setIsGrabbing(false);\r\n    e.dataTransfer.dropEffect = 'move';\r\n    const {current} = ref;\r\n    if ((current.offsetLeft + current.offsetWidth) / 2 < e.clientX * 0.4) {\r\n      setDeleted(true);\r\n      console.log(true);\r\n      if (deleteEach && index) {\r\n        deleteEach(index);\r\n      }\r\n    } else {\r\n      (ref.current as HTMLDivElement).style.marginLeft = `0`;\r\n      setDeleted(false);\r\n      console.log(false);\r\n    }\r\n  };\r\n  const handleTouchStart = (e: React.TouchEvent<HTMLDivElement>) => {\r\n    const {current} = ref;\r\n    const originPosTemp = {x: current.offsetLeft, y: current.offsetTop};\r\n    // setOriginPos(() => originPosTemp);\r\n    setIsGrabbing(true);\r\n  };\r\n  const handleTouchMove = (e: React.TouchEvent<HTMLDivElement>) => {\r\n    (\r\n      ref.current as HTMLDivElement\r\n    ).style.marginLeft = `${e.changedTouches[0].clientX}px`;\r\n  };\r\n  const handleTouchEnd = (e: React.TouchEvent<HTMLDivElement>) => {\r\n    e.preventDefault();\r\n    setIsGrabbing(false);\r\n    const {current} = ref;\r\n    if (\r\n      (current.offsetLeft + current.offsetWidth) / 2 <\r\n      e.changedTouches[0].clientX\r\n    ) {\r\n      setDeleted(true);\r\n      if (deleteEach && index) {\r\n        deleteEach(index);\r\n      }\r\n    } else {\r\n      (ref.current as HTMLDivElement).style.marginLeft = '0';\r\n      setDeleted(false);\r\n    }\r\n  };\r\n  const dynamicClass = () => {\r\n    let result = 'myNotification';\r\n    if (isGrabbing) {\r\n      result += ' grabbed';\r\n    }\r\n    if (deleted) {\r\n      result += ' deleted';\r\n    }\r\n    return result;\r\n  };\r\n  // useEffect(() => {\r\n  //   dynamicClass();\r\n  // }, [isGrabbing, deleted]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        ref={ref}\r\n        className={dynamicClass()}\r\n        draggable\r\n        onClick={toDetail(id)}\r\n        onDragStart={handleDragStart}\r\n        onDragOver={handleDragOver}\r\n        onDragEnd={handleDragEnd}\r\n        onTouchStart={handleTouchStart}\r\n        onTouchMove={handleTouchMove}\r\n        onTouchEnd={handleTouchEnd}>\r\n        <img\r\n          src={emojiArr[emoji]}\r\n          alt=\"emoji\"\r\n          className=\"myNotification-emoji\"\r\n        />\r\n        <p>\r\n          익명의 작가가 당신의 이야기 <br />\r\n          <span className=\"myNotification-title\">{shortTitle()}</span>을\r\n          좋아합니다\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyNotification;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}