{"ast":null,"code":"//** back과 통신\n\n// base url & headers\nimport { API_AUTH } from '@apis/index';\n// interface\n\n// text 정보 받아오기\nexport const getTextMesssage = async (type, postId) => {\n  const res = await API_AUTH.get(`/${type}/message/detail/${postId}`);\n  return res.data;\n};\n\n// 이미지 정보 받아오기\nexport const getImgMesssage = async (type, params) => {\n  const res = await API_AUTH.get(`/${type}/message/detail`, {\n    params\n  });\n  return res.data;\n};\n\n// 글 삭제\nexport const deleteMessage = async (type, postId) => {\n  const res = await API_AUTH.delete(`/${type}/message/${postId}`);\n  return res.data;\n};\n\n// 좋아요 여부 변경\n// data 타입만 다름\nexport const likeMessage = async (type, data) => {\n  switch (type) {\n    case 'text':\n      const textRes = await API_AUTH.post(`/${type}/like`, data);\n      return textRes.data;\n    case 'img':\n      const imgRes = await API_AUTH.post(`/${type}/like`, null, {\n        params: data\n      });\n      return imgRes.data;\n  }\n};\n\n// 공개 여부 변경\n// 이미지, 텍스트 데이터 다름\nexport const changeMessageStatus = async (type, data) => {\n  switch (type) {\n    case 'text':\n      const textRes = await API_AUTH.post(`/${type}/message/status`, data);\n      return textRes.data;\n    case 'img':\n      const imgRes = await API_AUTH.post(`/${type}/message/status`, null, {\n        params: data\n      });\n      return imgRes.data;\n  }\n};\n\n// 신고\nexport const reportMessage = async (type, data) => {\n  switch (type) {\n    case 'text':\n      const textRes = await API_AUTH.post(`/${type}/report`, data);\n      return textRes.data;\n    case 'img':\n      const imgRes = await API_AUTH.post(`/${type}/report`, null, {\n        params: data\n      });\n      return imgRes.data;\n  }\n};","map":{"version":3,"names":["API_AUTH","getTextMesssage","type","postId","res","get","data","getImgMesssage","params","deleteMessage","delete","likeMessage","textRes","post","imgRes","changeMessageStatus","reportMessage"],"sources":["C:/Users/Administrator/Desktop/S07P31C209/frontend/src/apis/messageDetail/detailFunc.ts"],"sourcesContent":["//** back과 통신\r\n\r\n// base url & headers\r\nimport {API_AUTH} from '@apis/index';\r\n// interface\r\nimport {\r\n  messageType,\r\n  messageImgType,\r\n  likeMessageType,\r\n  changeMessageStatusType,\r\n  reportMessageType,\r\n} from '@apis/messageDetail/detailInterface';\r\n\r\n// text 정보 받아오기\r\nexport const getTextMesssage: messageType = async (type, postId) => {\r\n  const res = await API_AUTH.get(`/${type}/message/detail/${postId}`);\r\n  return res.data;\r\n};\r\n\r\n// 이미지 정보 받아오기\r\nexport const getImgMesssage: messageImgType = async (type, params) => {\r\n  const res = await API_AUTH.get(`/${type}/message/detail`, {params});\r\n  return res.data;\r\n};\r\n\r\n// 글 삭제\r\nexport const deleteMessage: messageType = async (type, postId) => {\r\n  const res = await API_AUTH.delete(`/${type}/message/${postId}`);\r\n  return res.data;\r\n};\r\n\r\n// 좋아요 여부 변경\r\n// data 타입만 다름\r\nexport const likeMessage: likeMessageType = async (type, data) => {\r\n  switch (type) {\r\n    case 'text':\r\n      const textRes = await API_AUTH.post(`/${type}/like`, data);\r\n      return textRes.data;\r\n    case 'img':\r\n      const imgRes = await API_AUTH.post(`/${type}/like`, null, {params: data});\r\n      return imgRes.data;\r\n  }\r\n};\r\n\r\n// 공개 여부 변경\r\n// 이미지, 텍스트 데이터 다름\r\nexport const changeMessageStatus: changeMessageStatusType = async (\r\n  type,\r\n  data,\r\n) => {\r\n  switch (type) {\r\n    case 'text':\r\n      const textRes = await API_AUTH.post(`/${type}/message/status`, data);\r\n      return textRes.data;\r\n    case 'img':\r\n      const imgRes = await API_AUTH.post(`/${type}/message/status`, null, {\r\n        params: data,\r\n      });\r\n      return imgRes.data;\r\n  }\r\n};\r\n\r\n// 신고\r\nexport const reportMessage: reportMessageType = async (type, data) => {\r\n  switch (type) {\r\n    case 'text':\r\n      const textRes = await API_AUTH.post(`/${type}/report`, data);\r\n      return textRes.data;\r\n    case 'img':\r\n      const imgRes = await API_AUTH.post(`/${type}/report`, null, {\r\n        params: data,\r\n      });\r\n      return imgRes.data;\r\n  }\r\n};\r\n"],"mappings":"AAAA;;AAEA;AACA,SAAQA,QAAQ,QAAO,aAAa;AACpC;;AASA;AACA,OAAO,MAAMC,eAA4B,GAAG,OAAOC,IAAI,EAAEC,MAAM,KAAK;EAClE,MAAMC,GAAG,GAAG,MAAMJ,QAAQ,CAACK,GAAG,CAAE,IAAGH,IAAK,mBAAkBC,MAAO,EAAC,CAAC;EACnE,OAAOC,GAAG,CAACE,IAAI;AACjB,CAAC;;AAED;AACA,OAAO,MAAMC,cAA8B,GAAG,OAAOL,IAAI,EAAEM,MAAM,KAAK;EACpE,MAAMJ,GAAG,GAAG,MAAMJ,QAAQ,CAACK,GAAG,CAAE,IAAGH,IAAK,iBAAgB,EAAE;IAACM;EAAM,CAAC,CAAC;EACnE,OAAOJ,GAAG,CAACE,IAAI;AACjB,CAAC;;AAED;AACA,OAAO,MAAMG,aAA0B,GAAG,OAAOP,IAAI,EAAEC,MAAM,KAAK;EAChE,MAAMC,GAAG,GAAG,MAAMJ,QAAQ,CAACU,MAAM,CAAE,IAAGR,IAAK,YAAWC,MAAO,EAAC,CAAC;EAC/D,OAAOC,GAAG,CAACE,IAAI;AACjB,CAAC;;AAED;AACA;AACA,OAAO,MAAMK,WAA4B,GAAG,OAAOT,IAAI,EAAEI,IAAI,KAAK;EAChE,QAAQJ,IAAI;IACV,KAAK,MAAM;MACT,MAAMU,OAAO,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAE,IAAGX,IAAK,OAAM,EAAEI,IAAI,CAAC;MAC1D,OAAOM,OAAO,CAACN,IAAI;IACrB,KAAK,KAAK;MACR,MAAMQ,MAAM,GAAG,MAAMd,QAAQ,CAACa,IAAI,CAAE,IAAGX,IAAK,OAAM,EAAE,IAAI,EAAE;QAACM,MAAM,EAAEF;MAAI,CAAC,CAAC;MACzE,OAAOQ,MAAM,CAACR,IAAI;EAAC;AAEzB,CAAC;;AAED;AACA;AACA,OAAO,MAAMS,mBAA4C,GAAG,OAC1Db,IAAI,EACJI,IAAI,KACD;EACH,QAAQJ,IAAI;IACV,KAAK,MAAM;MACT,MAAMU,OAAO,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAE,IAAGX,IAAK,iBAAgB,EAAEI,IAAI,CAAC;MACpE,OAAOM,OAAO,CAACN,IAAI;IACrB,KAAK,KAAK;MACR,MAAMQ,MAAM,GAAG,MAAMd,QAAQ,CAACa,IAAI,CAAE,IAAGX,IAAK,iBAAgB,EAAE,IAAI,EAAE;QAClEM,MAAM,EAAEF;MACV,CAAC,CAAC;MACF,OAAOQ,MAAM,CAACR,IAAI;EAAC;AAEzB,CAAC;;AAED;AACA,OAAO,MAAMU,aAAgC,GAAG,OAAOd,IAAI,EAAEI,IAAI,KAAK;EACpE,QAAQJ,IAAI;IACV,KAAK,MAAM;MACT,MAAMU,OAAO,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAE,IAAGX,IAAK,SAAQ,EAAEI,IAAI,CAAC;MAC5D,OAAOM,OAAO,CAACN,IAAI;IACrB,KAAK,KAAK;MACR,MAAMQ,MAAM,GAAG,MAAMd,QAAQ,CAACa,IAAI,CAAE,IAAGX,IAAK,SAAQ,EAAE,IAAI,EAAE;QAC1DM,MAAM,EAAEF;MACV,CAAC,CAAC;MACF,OAAOQ,MAAM,CAACR,IAAI;EAAC;AAEzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}