{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\S07P31C209\\\\frontend\\\\src\\\\screens\\\\Main.tsx\",\n  _s = $RefreshSig$();\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { loadingState, transitionState } from '@apis/recoil';\nimport InitMessage from '@apis/notifications/foregroundMessaging';\nimport Loading from '@loading/Loading';\nimport Room from '@main/Room';\nimport OpenHelp from '@common/OpenHelp';\nimport BgmBtn from '@common/BgmBtn';\nimport { currentUser } from '@common/commonFunc';\nimport Alert from '@common/Alert';\nimport '@screens/Main.scss';\nimport Globe from '@screens/Globe';\nimport Map from '@screens/Map';\nimport MessageCreate from '@screens/MessageCreate';\nimport MessageDetail from '@screens/MessageDetail';\nimport MessageList from '@screens/MessageList';\nimport VR from '@screens/VR';\nimport NotFound from '@screens/NotFound';\nimport Individual from '@screens/Individual';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  // 로그인 여부 확인\n  const userInfo = currentUser();\n  const [isAlertOpened, setIsAlertOpend] = useState(userInfo === -1 ? true : false);\n  const navigate = useNavigate();\n\n  // url에 따라 다른 컴포넌트 렌더링\n  const location = useLocation();\n  const pathname = location.pathname;\n  const component = () => {\n    if (pathname.startsWith('/message/create')) {\n      return /*#__PURE__*/_jsxDEV(MessageCreate, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }, this);\n    } else if (pathname.startsWith('/message/detail')) {\n      return /*#__PURE__*/_jsxDEV(MessageDetail, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this);\n    } else if (pathname.startsWith('/message/list')) {\n      return /*#__PURE__*/_jsxDEV(MessageList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }, this);\n    } else if (pathname.startsWith('/vr')) {\n      return /*#__PURE__*/_jsxDEV(VR, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }, this);\n    } else if (pathname.startsWith('/globe')) {\n      return /*#__PURE__*/_jsxDEV(Globe, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, this);\n    } else if (pathname.startsWith('/settings')) {\n      return /*#__PURE__*/_jsxDEV(Individual, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 14\n      }, this);\n    } else if (pathname.startsWith('/notification')) {\n      return /*#__PURE__*/_jsxDEV(Individual, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }, this);\n    } else if (pathname.startsWith('/map')) {\n      return /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  // main 최초 렌더링 확인\n  const [isLoaded, setIsLoaded] = useRecoilState(loadingState);\n  if (pathname === '/main' && !isLoaded) {\n    setTimeout(() => {\n      setIsLoaded(true);\n    }, 3000);\n  }\n\n  // main 렌더링 시 애니메이션 효과\n  const [transitionName, setTransitionName] = useRecoilState(transitionState);\n  useEffect(() => {\n    if (transitionName === '') {\n      setTransitionName('fadeIn');\n    }\n  }, [pathname]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isAlertOpened ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"screen main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${transitionName}`,\n        onAnimationEnd: () => {\n          if (transitionName === 'fadeIn') {\n            setTransitionName('');\n          }\n        },\n        children: [pathname === '/main' && !isLoaded ? /*#__PURE__*/_jsxDEV(Loading, {\n          fillBackground: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this) : null, /*#__PURE__*/_jsxDEV(InitMessage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"screen\",\n          style: {\n            display: pathname.startsWith('/main') ? 'block' : 'none'\n          },\n          children: [/*#__PURE__*/_jsxDEV(OpenHelp, {\n            imagesIndex: 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(BgmBtn, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Room, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: pathname.startsWith('/main') ? 'none' : 'block'\n          },\n          children: component()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      info: {\n        title: '알림',\n        message: '로그인이 필요합니다.'\n      },\n      open: isAlertOpened,\n      onConfirmed: () => {\n        setIsAlertOpend(false);\n        navigate('/');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Main, \"btsg5grby2H4q7xt9ZebYoplwIQ=\", false, function () {\n  return [useNavigate, useLocation, useRecoilState, useRecoilState];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useLocation","useNavigate","useEffect","useState","useRecoilState","loadingState","transitionState","InitMessage","Loading","Room","OpenHelp","BgmBtn","currentUser","Alert","Globe","Map","MessageCreate","MessageDetail","MessageList","VR","NotFound","Individual","Main","userInfo","isAlertOpened","setIsAlertOpend","navigate","location","pathname","component","startsWith","isLoaded","setIsLoaded","setTimeout","transitionName","setTransitionName","display","title","message"],"sources":["C:/Users/Administrator/Desktop/S07P31C209/frontend/src/screens/Main.tsx"],"sourcesContent":["import {useLocation, useNavigate} from 'react-router-dom';\r\nimport {useEffect, useState} from 'react';\r\nimport {useRecoilState} from 'recoil';\r\nimport {loadingState, transitionState} from '@apis/recoil';\r\n\r\nimport InitMessage from '@apis/notifications/foregroundMessaging';\r\n\r\nimport Loading from '@loading/Loading';\r\nimport Room from '@main/Room';\r\nimport OpenHelp from '@common/OpenHelp';\r\nimport BgmBtn from '@common/BgmBtn';\r\nimport {currentUser} from '@common/commonFunc';\r\nimport Alert from '@common/Alert';\r\n\r\nimport '@screens/Main.scss';\r\nimport Globe from '@screens/Globe';\r\nimport Map from '@screens/Map';\r\nimport MessageCreate from '@screens/MessageCreate';\r\nimport MessageDetail from '@screens/MessageDetail';\r\nimport MessageList from '@screens/MessageList';\r\nimport VR from '@screens/VR';\r\nimport NotFound from '@screens/NotFound';\r\nimport Individual from '@screens/Individual';\r\n\r\nfunction Main() {\r\n  // 로그인 여부 확인\r\n  const userInfo = currentUser();\r\n  const [isAlertOpened, setIsAlertOpend] = useState(\r\n    userInfo === -1 ? true : false,\r\n  );\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // url에 따라 다른 컴포넌트 렌더링\r\n  const location = useLocation();\r\n  const pathname = location.pathname;\r\n\r\n  const component = () => {\r\n    if (pathname.startsWith('/message/create')) {\r\n      return <MessageCreate />;\r\n    } else if (pathname.startsWith('/message/detail')) {\r\n      return <MessageDetail />;\r\n    } else if (pathname.startsWith('/message/list')) {\r\n      return <MessageList />;\r\n    } else if (pathname.startsWith('/vr')) {\r\n      return <VR />;\r\n    } else if (pathname.startsWith('/globe')) {\r\n      return <Globe />;\r\n    } else if (pathname.startsWith('/settings')) {\r\n      return <Individual />;\r\n    } else if (pathname.startsWith('/notification')) {\r\n      return <Individual />;\r\n    } else if (pathname.startsWith('/map')) {\r\n      return <Map />;\r\n    } else {\r\n      return <NotFound />;\r\n    }\r\n  };\r\n\r\n  // main 최초 렌더링 확인\r\n  const [isLoaded, setIsLoaded] = useRecoilState(loadingState);\r\n\r\n  if (pathname === '/main' && !isLoaded) {\r\n    setTimeout(() => {\r\n      setIsLoaded(true);\r\n    }, 3000);\r\n  }\r\n\r\n  // main 렌더링 시 애니메이션 효과\r\n  const [transitionName, setTransitionName] = useRecoilState(transitionState);\r\n\r\n  useEffect(() => {\r\n    if (transitionName === '') {\r\n      setTransitionName('fadeIn');\r\n    }\r\n  }, [pathname]);\r\n\r\n  return (\r\n    <>\r\n      {isAlertOpened ? null : (\r\n        <div className=\"screen main\">\r\n          <div\r\n            className={`${transitionName}`}\r\n            onAnimationEnd={() => {\r\n              if (transitionName === 'fadeIn') {\r\n                setTransitionName('');\r\n              }\r\n            }}>\r\n            {pathname === '/main' && !isLoaded ? (\r\n              <Loading fillBackground={false} />\r\n            ) : null}\r\n\r\n            <InitMessage />\r\n            <div\r\n              className=\"screen\"\r\n              style={{\r\n                display: pathname.startsWith('/main') ? 'block' : 'none',\r\n              }}>\r\n              <OpenHelp imagesIndex={0} />\r\n              <BgmBtn />\r\n              <Room />\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                display: pathname.startsWith('/main') ? 'none' : 'block',\r\n              }}>\r\n              {component()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <Alert\r\n        info={{title: '알림', message: '로그인이 필요합니다.'}}\r\n        open={isAlertOpened}\r\n        onConfirmed={() => {\r\n          setIsAlertOpend(false);\r\n          navigate('/');\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}