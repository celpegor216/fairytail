{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\S07P31C209\\\\frontend\\\\src\\\\screens\\\\MessageDetail.tsx\",\n  _s = $RefreshSig$();\n// ** 메시지 상세\n\nimport { useState, useRef, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router';\nimport { ReactComponent as EllipsisVertical } from '@images/ellipsisVertical.svg';\nimport MoreMenu from '@common/MoreMenu';\nimport Content from '@messageDetail/Content';\nimport Like from '@messageDetail/Like';\nimport MoveToBack from '@common/MoveToBack';\nimport { notFound, intro } from '@apis/router';\nimport '@screens/MessageDetail.scss';\nimport { getTextMesssage, getImgMesssage } from '@/apis/messageDetail/detailFunc';\nimport { intMessageId, convStringType } from '@/components/common/commonFunc';\nimport { currentUser } from '@common/commonFunc';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MessageDetail() {\n  _s();\n  // 풍선 저장 관련\n  const messageDetailRef = useRef(null);\n\n  // 전달 받은 messageId가 숫자가 아니라면 notfound로 이동\n  const navigate = useNavigate();\n  const params = useParams();\n  const messageId = intMessageId(params.id);\n  const type = convStringType(params.type);\n\n  // 현재 사용자 정보\n  const userId = currentUser();\n  // const userId = 1;\n\n  // 서버 통신으로 게시글 정보 가져오기\n  const dataType = {\n    postId: 0,\n    type: 0,\n    title: '',\n    userId: 0,\n    emojiNo: 0,\n    content: '',\n    likeCnt: 0,\n    isLike: false,\n    date: '',\n    dayType: 4,\n    status: 0,\n    url: '',\n    lat: 0,\n    lng: 0\n  };\n  const [data, setData] = useState(dataType);\n  const getVaribleMessage = () => {\n    if (type === 'text') {\n      getTextMesssage(type, messageId).then(res => {\n        if (res.message === 'SUCCESS') {\n          setData(prev => {\n            return {\n              ...prev,\n              ...res.data\n            };\n          });\n        } else {\n          // 실패했을 경우 404로 이동\n          navigate(notFound());\n        }\n      });\n    } else if (type === 'img') {\n      getImgMesssage(type, {\n        postId: messageId,\n        userId\n      }).then(res => {\n        if (res.message === 'SUCCESS') {\n          setData(prev => {\n            return {\n              ...prev,\n              ...res.data\n            };\n          });\n        } else {\n          // 실패했을 경우 404로 이동\n          navigate(notFound());\n        }\n      });\n    } else {\n      navigate(notFound());\n    }\n  };\n  // 현재 사용자가 작성한 게시글인지 확인\n  const isMine = () => userId === data.userId;\n  useEffect(() => {\n    if (messageId === -1) {\n      navigate(notFound());\n    } else if (userId === -1) {\n      navigate(intro());\n    } else if (type) {\n      getVaribleMessage();\n    }\n  }, []);\n\n  // 비공개 글일 때 작성자가 자신이 아니면 404 페이지로 이동\n  useEffect(() => {\n    if (!isMine() && data.status) {\n      navigate(notFound());\n    }\n    setNewStatus(data.status);\n  }, [data]);\n\n  // 메뉴 표시 여부\n  const [more, setMore] = useState(false);\n  const hiddenMenu = () => {\n    if (more) setMore(false);\n  };\n  const showMenu = () => setMore(!more);\n\n  // 날짜 형식에 맞춰 표시\n  const modifiedDate = () => data.date.split('T')[0];\n\n  // 공개 여부 변경 대비\n  const [newStatus, setNewStatus] = useState(data.status);\n  // content에 들어갈 내용\n  const detailContent = () => {\n    switch (type) {\n      case 'text':\n        return data.content;\n      default:\n        return `https://${data.url}`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `screen background${data.dayType}`,\n    ref: messageDetailRef,\n    onClick: hiddenMenu,\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        \"data-html2canvas-ignore\": \"true\",\n        className: \"ignore\",\n        children: [/*#__PURE__*/_jsxDEV(MoveToBack, {\n          path: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"message-detail-nav-more\",\n          onClick: showMenu,\n          children: /*#__PURE__*/_jsxDEV(EllipsisVertical, {\n            width: \"32\",\n            height: \"32\",\n            fill: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoreMenu, {\n          open: more,\n          isMine: isMine(),\n          detail: messageDetailRef,\n          messageId: messageId,\n          type: type,\n          content: data.content,\n          close: hiddenMenu,\n          status: newStatus,\n          setStatus: setNewStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Content, {\n          title: data.title,\n          content: detailContent(),\n          type: data.type,\n          date: modifiedDate(),\n          status: newStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Like, {\n          count: data.likeCnt,\n          like: data.isLike,\n          isMine: isMine(),\n          emoji: data.emojiNo,\n          type: type,\n          writerId: data.userId,\n          likeInfo: {\n            postId: messageId,\n            userId\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(MessageDetail, \"HEGxColRfcfYVbXDsV3yATpM/ZE=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = MessageDetail;\nexport default MessageDetail;\nvar _c;\n$RefreshReg$(_c, \"MessageDetail\");","map":{"version":3,"names":["useState","useRef","useEffect","useNavigate","useParams","ReactComponent","EllipsisVertical","MoreMenu","Content","Like","MoveToBack","notFound","intro","getTextMesssage","getImgMesssage","intMessageId","convStringType","currentUser","MessageDetail","messageDetailRef","navigate","params","messageId","id","type","userId","dataType","postId","title","emojiNo","content","likeCnt","isLike","date","dayType","status","url","lat","lng","data","setData","getVaribleMessage","then","res","message","prev","isMine","setNewStatus","more","setMore","hiddenMenu","showMenu","modifiedDate","split","newStatus","detailContent"],"sources":["C:/Users/Administrator/Desktop/S07P31C209/frontend/src/screens/MessageDetail.tsx"],"sourcesContent":["// ** 메시지 상세\r\n\r\nimport {useState, useRef, useEffect} from 'react';\r\nimport {useNavigate, useParams} from 'react-router';\r\nimport {ReactComponent as EllipsisVertical} from '@images/ellipsisVertical.svg';\r\nimport MoreMenu from '@common/MoreMenu';\r\nimport Content from '@messageDetail/Content';\r\nimport Like from '@messageDetail/Like';\r\nimport MoveToBack from '@common/MoveToBack';\r\nimport {notFound, intro} from '@apis/router';\r\nimport '@screens/MessageDetail.scss';\r\nimport {getTextMesssage, getImgMesssage} from '@/apis/messageDetail/detailFunc';\r\nimport {\r\n  textDetailResponse,\r\n  imgDetailResponse,\r\n} from '@/apis/messageDetail/detailInterface';\r\nimport {intMessageId, convStringType} from '@/components/common/commonFunc';\r\nimport {currentUser} from '@common/commonFunc';\r\n\r\nfunction MessageDetail() {\r\n  // 풍선 저장 관련\r\n  const messageDetailRef = useRef(null!);\r\n\r\n  // 전달 받은 messageId가 숫자가 아니라면 notfound로 이동\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const messageId = intMessageId(params.id);\r\n  const type = convStringType(params.type);\r\n\r\n  // 현재 사용자 정보\r\n  const userId = currentUser();\r\n  // const userId = 1;\r\n\r\n  // 서버 통신으로 게시글 정보 가져오기\r\n  const dataType = {\r\n    postId: 0,\r\n    type: 0,\r\n    title: '',\r\n    userId: 0,\r\n    emojiNo: 0,\r\n    content: '',\r\n    likeCnt: 0,\r\n    isLike: false,\r\n    date: '',\r\n    dayType: 4,\r\n    status: 0,\r\n    url: '',\r\n    lat: 0,\r\n    lng: 0,\r\n  };\r\n  const [data, setData] = useState(dataType);\r\n  const getVaribleMessage = () => {\r\n    if (type === 'text') {\r\n      getTextMesssage(type, messageId).then((res: textDetailResponse) => {\r\n        if (res.message === 'SUCCESS') {\r\n          setData(prev => {\r\n            return {...prev, ...res.data};\r\n          });\r\n        } else {\r\n          // 실패했을 경우 404로 이동\r\n          navigate(notFound());\r\n        }\r\n      });\r\n    } else if (type === 'img') {\r\n      getImgMesssage(type, {postId: messageId, userId}).then(\r\n        (res: imgDetailResponse) => {\r\n          if (res.message === 'SUCCESS') {\r\n            setData(prev => {\r\n              return {...prev, ...res.data};\r\n            });\r\n          } else {\r\n            // 실패했을 경우 404로 이동\r\n            navigate(notFound());\r\n          }\r\n        },\r\n      );\r\n    } else {\r\n      navigate(notFound());\r\n    }\r\n  };\r\n  // 현재 사용자가 작성한 게시글인지 확인\r\n  const isMine = () => userId === data.userId;\r\n\r\n  useEffect(() => {\r\n    if (messageId === -1) {\r\n      navigate(notFound());\r\n    } else if (userId === -1) {\r\n      navigate(intro());\r\n    } else if (type) {\r\n      getVaribleMessage();\r\n    }\r\n  }, []);\r\n\r\n  // 비공개 글일 때 작성자가 자신이 아니면 404 페이지로 이동\r\n  useEffect(() => {\r\n    if (!isMine() && data.status) {\r\n      navigate(notFound());\r\n    }\r\n    setNewStatus(data.status);\r\n  }, [data]);\r\n\r\n  // 메뉴 표시 여부\r\n  const [more, setMore] = useState(false);\r\n\r\n  const hiddenMenu = () => {\r\n    if (more) setMore(false);\r\n  };\r\n\r\n  const showMenu = () => setMore(!more);\r\n\r\n  // 날짜 형식에 맞춰 표시\r\n  const modifiedDate = () => data.date.split('T')[0];\r\n\r\n  // 공개 여부 변경 대비\r\n  const [newStatus, setNewStatus] = useState(data.status);\r\n  // content에 들어갈 내용\r\n  const detailContent = () => {\r\n    switch (type) {\r\n      case 'text':\r\n        return data.content;\r\n      default:\r\n        return `https://${data.url}`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`screen background${data.dayType}`}\r\n      ref={messageDetailRef}\r\n      onClick={hiddenMenu}>\r\n      <main id=\"container\">\r\n        <section data-html2canvas-ignore=\"true\" className=\"ignore\">\r\n          <MoveToBack path=\"\" />\r\n          <div id=\"message-detail-nav-more\" onClick={showMenu}>\r\n            <EllipsisVertical width=\"32\" height=\"32\" fill=\"white\" />\r\n          </div>\r\n          <MoreMenu\r\n            open={more}\r\n            isMine={isMine()}\r\n            detail={messageDetailRef}\r\n            messageId={messageId}\r\n            type={type}\r\n            content={data.content}\r\n            close={hiddenMenu}\r\n            status={newStatus}\r\n            setStatus={setNewStatus}\r\n          />\r\n        </section>\r\n        <section className=\"container\">\r\n          <Content\r\n            title={data.title}\r\n            content={detailContent()}\r\n            type={data.type}\r\n            date={modifiedDate()}\r\n            status={newStatus}\r\n          />\r\n          <Like\r\n            count={data.likeCnt}\r\n            like={data.isLike}\r\n            isMine={isMine()}\r\n            emoji={data.emojiNo}\r\n            type={type}\r\n            writerId={data.userId}\r\n            likeInfo={{\r\n              postId: messageId,\r\n              userId,\r\n            }}\r\n          />\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageDetail;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}